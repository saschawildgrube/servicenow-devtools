<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.InstanceScanSuiteOnRecord</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Performs an instance scan on a record using a specific suite.</description>
        <mobile_callable>false</mobile_callable>
        <name>InstanceScanSuiteOnRecord</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function InstanceScanSuiteOnRecord(strSuiteSysId, strRecordTable, strRecordSysId, bDetailed)
{
	if (InstanceScanIsRunning() == true)
	{
		return false;
	}

	strSuiteSysId = GetStringValue(strSuiteSysId);
	strRecordTable = GetStringValue(strRecordTable);
	strRecordSysId = GetStringValue(strRecordSysId);
	
	if (IsValidSysId(strSuiteSysId) == false || strSuiteSysId == '')
	{
		return false;
	}
	if (IsValidTable(strRecordTable) == false)
	{
		return false;
	}
	if (IsValidSysId(strRecordSysId) == false)
	{
		return false;
	}
	
	var grRecord = GetRecord(strRecordTable,strRecordSysId);
	if (IsValidRecord(grRecord) == false)
	{
		return false;
	}	
	
	var grSuite = new GlideRecord('scan_suite');
	
	var su = new sn_instance_scan.ScanUtil()
	var strComboSysId = su.getOrCreateComboFromSuiteAndTargets(strSuiteSysId, strRecordTable, [strRecordSysId]);
	if (IsValidSysId(strComboSysId) == false)
	{
		return false;
	}
	
	var strRecordScopeSysId = GetRecordScopeSysId(grRecord);

	var strUpdateSetSysId = '';
	var strUpdateXmlSysId = '';	
	
	function CleanUp()
	{
		RecordDelete('sys_update_xml',strUpdateXmlSysId);
		RecordDelete('sys_update_set',strUpdateSetSysId);		
	}

	
	// There is a bug in sn_instance_scan.ScanInstance().triggerScanFromCombo() which causes records NOT to be scanned
	// if they are NOT in a current update set. No joke.
	// To mitigate the bug we need to create a temporary update set and update XML
	
	
	var grUS = new GlideRecord('sys_update_set');
	grUS.initialize();
	grUS.sys_scope = strRecordScopeSysId;
	strUpdateSetSysId = GlideRecordInsert(grUS);
	if (IsValidSysId(strUpdateSetSysId) == false)
	{
		return false;
	}
	
	var grUX = new GlideRecord('sys_update_xml');
	grUX.initialize();
	grUX.action = 'INSERT_OR_UPDATE';
	grUX.application = strRecordScopeSysId;
	grUX.category = 'customer';
	grUX.name = grRecord.getRecordClassName()+'_'+grRecord.sys_id;
	grUX.update_set = strUpdateSetSysId;	
	strUpdateXmlSysId = GlideRecordInsert(grUX);
	
	
	if (IsValidSysId(strUpdateXmlSysId) == false)
	{
		CleanUp();
		return false;
	}	
	
	

	var si = new sn_instance_scan.ScanInstance();
	var strProgressSysId = '';
	try 
	{
		strProgressSysId = si.triggerScanFromCombo(strComboSysId);;
	}
	catch (e)
	{
	}
	
	if (IsValidSysId(strProgressSysId) == false)
	{
		CleanUp();
		return false;
	}
	
	var grProgress = new GlideRecord('sys_progress_worker');
	var bProgress = true;
	while (bProgress == true)
	{
		if (grProgress.get(strProgressSysId))
		{
			var strState = GetStringValue(grProgress.state);  
			if (strState != 'starting' && strState != 'running')
			{
				bProgress = false;
			}
		}
		else
		{
			bProgress = false;
		}
	}
	
	var grScanResult = new GlideRecord('scan_result');
	grScanResult.addQuery('progress_id','=',strProgressSysId);
	grScanResult.query();
	if (grScanResult.next() == false)
	{
		CleanUp();
		return false;
	}
	
	var results = InstanceScanGetScanResults(grScanResult.sys_id,bDetailed);

	CleanUp();
	
	return results;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-10-14 12:23:14</sys_created_on>
        <sys_id>03c427d547261d10a4b0d4fe536d4351</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>InstanceScanSuiteOnRecord</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_03c427d547261d10a4b0d4fe536d4351</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-28 12:58:39</sys_updated_on>
    </sys_script_include>
</record_update>
