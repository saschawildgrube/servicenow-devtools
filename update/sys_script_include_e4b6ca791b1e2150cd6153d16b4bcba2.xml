<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.CreateUserByEmail</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Creates a new user based on a given Email address and assigns the specified groups. Returns the Sys ID of the new user if successful or false if the email address is not valid or a user with that email address already exists.</description>
        <mobile_callable>false</mobile_callable>
        <name>CreateUserByEmail</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function CreateUserByEmail(strEmail,aGroups)
{
	strEmail = GetStringValue(strEmail);
	if (IsValidEmail(strEmail) == false)
	{
		return false;
	}
	
	var aGroups = GetArrayValue(aGroups);

	var grUser = GetUserRecord(strEmail);
	if (IsValidRecord(grUser) == true)
	{
		return false;
	}
	
	var email = ParseEmail(strEmail);
	if (email == false)
	{
		return false;
	}
	
	//var strName = email.name;
	//var aName
	
	function GetDisplayName(strName)
	{
		strName = GetStringValue(strName);
		if (strName == '')
		{
			return '';
		}
		var strDisplayName = '';
		var strFirstLetter = GetValue(strName,0);
		strFirstLetter = strFirstLetter.toUpperCase();
		strDisplayName = strFirstLetter + strName.substr(1);
			
		return strDisplayName;
	}

	var strUserName = email.name;
	strUserName = strUserName.toLowerCase();	
	
	var grUser = new GlideRecord('sys_user');
	grUser.initialize();
	grUser.email = strEmail;
	grUser.user_name = strUserName;
	grUser.first_name = GetDisplayName(email.firstname);
	grUser.last_name = GetDisplayName(email.lastname);
	grUser.preferred_language = 'en';
	grUser.active = true;
	var strUserSysId = grUser.insert();
	
	if (IsValidSysId(strUserSysId) == false)
	{
		return false;
	}

	for (var nGroup = 0; nGroup < aGroups.length; nGroup++)
	{
		var strGroup = aGroups[nGroup];
		var grGroup = GetRecord('sys_user_group',strGroup);
		if (IsValidRecord(grGroup))
		{
			var grMember = new GlideRecord('sys_user_grmember');
			grMember.initialize();
			grMember.user = strUserSysId;
			grMember.group = strGroup;
			grMember.insert();
		}
	}
	
	return strUserSysId;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-20 04:46:45</sys_created_on>
        <sys_id>e4b6ca791b1e2150cd6153d16b4bcba2</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>CreateUserByEmail</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_e4b6ca791b1e2150cd6153d16b4bcba2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-28 12:59:00</sys_updated_on>
    </sys_script_include>
</record_update>
