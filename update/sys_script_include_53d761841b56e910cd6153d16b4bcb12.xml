<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.InstanceScanGetCheckFromQuery</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Based on a given encoded query string, the function returns the GlideRecord object of the requested Instance Scan check, false if the encoded query is unrelated to Instance Scan.</description>
        <mobile_callable>false</mobile_callable>
        <name>InstanceScanGetCheckFromQuery</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function InstanceScanGetCheckFromQuery(strEncodedQuery)
{
/*
	This is an example of a query that is used by InstanceScan to get a record to be checked for a specific check:
	
	sys_class_name=sys_ui_action
	^active=true
	^sys_policy!=protected^ORsys_policy=NULL
	^sys_id!=fd885f65dbc41010f85054c5dc96191d
	^sys_id=fd55755b1b4bb090edf3642aab4bcbe5

	The Sys Id of the check is used in the sys_id!= condition. Unclear why, but it helps us to identify the check.
	sys_id= or sys_idIN identifies the records to be scanned using the check.

	Sometimes "active=true" is contained in the query, sometimes not.
*/	

	strEncodedQuery = GetStringValue(strEncodedQuery);
	if (strEncodedQuery == '')
	{
		return false;
	}
	
	function IsInstanceScanQuery(strEncodedQuery)
	{
		strEncodedQuery = GetStringValue(strEncodedQuery);
		if (strEncodedQuery.indexOf('sys_class_name=') != 0)
		{
			return false;
		}
		if (strEncodedQuery.indexOf('^sys_policy!=protected^ORsys_policy=NULL^sys_id!=') == -1)
		{
			return false;
		}
		return true;
	}

	if (IsInstanceScanQuery(strEncodedQuery) == false)
	{
		return false;
	}

	
	var nPos = strEncodedQuery.indexOf('^sys_id!=');
	if (nPos == -1)
	{
		return false;
	}
	nPos += 9;
	var strCheckSysId = strEncodedQuery.substr(nPos,32);
	if (IsValidSysId(strCheckSysId) == false)
	{
		return false; 
	}

	var grCheck = GetRecord('scan_check',strCheckSysId);
	return grCheck;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-14 16:02:48</sys_created_on>
        <sys_id>53d761841b56e910cd6153d16b4bcb12</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>InstanceScanGetCheckFromQuery</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_53d761841b56e910cd6153d16b4bcb12</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-28 12:58:46</sys_updated_on>
    </sys_script_include>
</record_update>
