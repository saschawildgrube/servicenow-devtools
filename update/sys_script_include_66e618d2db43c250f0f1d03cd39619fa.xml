<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.GetCredentialFromAlias</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Returns an object with "username", "password" and "apikey" values (which are populated depending on the credential type) if the given credential alias can be resolved, otherwise false.</description>
        <mobile_callable>false</mobile_callable>
        <name>GetCredentialFromAlias</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function GetCredentialFromAlias(strCredentialAliasId)
{
	var grAlias = new GlideRecord('sys_alias');
	grAlias.addQuery('id','=',strCredentialAliasId);
	grAlias.addQuery('type','=','credential');
	grAlias.query();
	if (grAlias.next() == false)
	{
		return false;
	}
	
	var provider = new sn_cc.StandardCredentialsProvider();
	var credential = provider.getCredentialByAliasID(grAlias.sys_id);

	return GetDetailsFromCredential(credential);
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-29 09:03:59</sys_created_on>
        <sys_id>66e618d2db43c250f0f1d03cd39619fa</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>GetCredentialFromAlias</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_66e618d2db43c250f0f1d03cd39619fa</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-28 12:58:47</sys_updated_on>
    </sys_script_include>
</record_update>
