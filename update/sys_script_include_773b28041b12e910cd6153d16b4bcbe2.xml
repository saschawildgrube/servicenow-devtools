<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.InstanceScanCheckOnApp</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Performs an instance scan on an application using only a specific check.</description>
        <mobile_callable>false</mobile_callable>
        <name>InstanceScanCheckOnApp</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function InstanceScanCheckOnApp(strCheckSysId, vApp, bDetailed)
{
	if (InstanceScanIsRunning() == true)
	{
		return false;
	}
		
	strCheckSysId = GetStringValue(strCheckSysId);
	var grApp = GetAppRecord(vApp);
	
	if (IsValidSysId(strCheckSysId) == false)
	{
		return false;
	}
	if (IsValidRecord(grApp) == false)
	{
		return false;
	}
	
	//var strUpdateSetSysId = '';
	//var strUpdateXmlSysId = '';
	var strSuiteSysId = '';
	var strSuiteCheckSysId = '';
	
	function CleanUp()
	{
		RecordDelete('scan_check_suite_check',strSuiteCheckSysId);
		RecordDelete('scan_check_suite',strSuiteSysId);
		//RecordDelete('sys_update_xml',strUpdateXmlSysId);
		//RecordDelete('sys_update_set',strUpdateSetSysId);		
	}

	/*
	// There is a bug in sn_instance_scan.ScanInstance().triggerScanFromCombo() which causes records NOT to be scanned
	// if they are NOT in a current update set. No joke.
	// To mitigate the bug we need to create a temporary update set and update XML

	var grUS = new GlideRecord('sys_update_set');
	grUS.initialize();
	grUS.sys_scope = grApp.sys_id;
	strUpdateSetSysId = GlideRecordInsert(grUS);
	if (IsValidSysId(strUpdateSetSysId) == false)
	{
		return false;
	}
	
	var grUX = new GlideRecord('sys_update_xml');
	grUX.initialize();
	grUX.action = 'INSERT_OR_UPDATE';
	grUX.application = grApp.sys_id;
	grUX.category = 'customer';
	grUX.name = 'sys_app_'+vApp.sys_id;
	grUX.update_set = strUpdateSetSysId;	
	strUpdateXmlSysId = GlideRecordInsert(grUX);

	if (IsValidSysId(strUpdateXmlSysId) == false)
	{
		CleanUp();
		return false;
	}
	*/
		
	strSuiteSysId = RecordQueryOrInsert(
		'scan_check_suite',
		{ name: 'DevTools.TEMP' },
		{ sys_scope: 'global' },
		true);
		
	if (IsValidSysId(strSuiteSysId) == false)
	{
		CleanUp();
		return false;
	}
	
	var values = {
		suite: strSuiteSysId,
		check: strCheckSysId,
		sys_scope: 'global'
	};

	strSuiteCheckSysId = RecordQueryOrInsert('scan_check_suite_check',values,values,true);

	if (IsValidSysId(strSuiteCheckSysId) == false)
	{
		CleanUp();
		return false;
	}
		
	var results = InstanceScanSuiteOnApp(strSuiteSysId,grApp,bDetailed);
	
	CleanUp();
	
	return results;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-14 11:35:35</sys_created_on>
        <sys_id>773b28041b12e910cd6153d16b4bcbe2</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>InstanceScanCheckOnApp</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_773b28041b12e910cd6153d16b4bcbe2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-10 12:03:51</sys_updated_on>
    </sys_script_include>
</record_update>
