<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description/>
        <direct>false</direct>
        <endpoint>x_snc_devtools_manual.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<div style="padding-left: 20px;">
<span style="visibility: hidden;">_CUT_HERE_</span>
	<g2:no_escape>$[
		var docapi = new DocumentationAPI('x_snc_devtools');
		docapi.RenderHeader();
	]</g2:no_escape>
	
	<p>Welcome to DevTools - created and maintained by&#160;<a href="mailto:sascha.wildgrube@servicenow.com">Sascha Wildgrube</a>.</p>

	<h2>Overview</h2> 
	<g2:no_escape>$[
		docapi.RenderDescription();  
	]</g2:no_escape>	

	<p>Special thanks go to&#160;<a href="mailto:k.janssen@posteo.de">Kevin Janssen</a>&#160;for his contribution to the AzureDevOpsAPI class and &#160;<a href="https://github.com/denysbulakh/transliterate-ukrainian/blob/main/translit.js">Denys Bulakh</a>&#160;who provided the groundwork for the Ukrainian transliteration mechanism in function Transliterate().</p>

	<h2>Disclaimer</h2>
	<g2:no_escape>$[docapi.RenderDisclaimer()]</g2:no_escape>	
	
	<p>Some features contained on DevTools and the techniques being used might be considered as a violation of security policies. Please make sure any use is based on conscious choice and careful assessment. This specifically applies to the functions&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=cc44a1c91b4b7450edf3642aab4bcb13" target="_blank">RunScriptInScope()</a>&#160;and&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=7303bde9db30a410ba15a35305961968" target="_blank">RunScriptInGlobalScope()</a>&#160;- which are used in many DevTools functions internally. These features are enabled by setting the system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=9e52826587120300cf2d5fb736cb0b7f" target="_blank">glide.record.legacy_cross_scope_access_policy_in_script</a>&#160;to "true".</p>
	
	<h2>System Requirements</h2>
	<ul>
		<g2:no_escape>$[
			docapi.RenderSystemRequirements(
				'Xanadu,Yokohama',
				true,
				AppGetDependencies());
		]</g2:no_escape>	
	</ul>
	
	<h2>Installation</h2>
	<ol>
		<li style="color: red; font-weight: bold;">Set the system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=9e52826587120300cf2d5fb736cb0b7f" target="_blank">glide.record.legacy_cross_scope_access_policy_in_script</a>&#160;to "true". If the system property does not exist, it must be created (in "global" scope and with type "true/false").</li> 
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'DevTools',
				'https://github.com/saschawildgrube/servicenow-devtools');
		]</g2:no_escape>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsAppInstall();
		]</g2:no_escape>		
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsRunTestSuite('4a8550391b5b8850a89720a8ec4bcbd9');
		]</g2:no_escape>		
		
		<li>In case of errors:
			<ol>
				<li>If the test "DevTools - HttpRequest" fails this may indicate that the instance cannot establish an http connection to itself. This is be the case in some self-hosted environments and requires intervention by the teams responsible to configure the network around the instance.</li>
				<li>In a domain separated instance it may be necessary to switch to the topmost domain to pass all tests.</li>
				<li>If the test "DevTools - RunScriptInGlobalScope" fails: Retry after a few minutes. Some cross-scope privileges will be set up during the first test run and might take a few minutes to be effective. The function RunScriptInGlobalScope() is used in many other functions, so do look into any other failed tests as long as this test fails.</li>
				<li>Tests "DevTools - TestDataAPI": These scripts create various records (e.g. incidents, problems, etc.). If there are customizations in place that make additional fields mandatory, you may have to set up business rules to set these values - but only if the short description (or the corresponding field) starts with "_ATF_".</li>
				<li>If the "DevTools - Test data sanity" test fails you can use the following script to clear existing test data:</li>
				<pre>var testdata = new x_snc_devtools.TestDataAPI('_ATF_DEVTOOLS_');
gs.info('Before DeleteAllData(): '+x_snc_devtools.RenderValue(testdata.GetAllData()));
testdata.DeleteAllData(testdata.GetAllData());
gs.info('After DeleteAllData(): '+x_snc_devtools.RenderValue(testdata.GetAllData()));
				</pre>
			</ol>
		</li>
	</ol>
	
	<h2>Features</h2>

	<h3>Script Includes and UI Scripts</h3>
	<p>DevTools contains a wide variety of functions and classes (server-side and client-side) for re-use.</p>
	<p>Please refer to the reference section for details.</p>
	
	<h3>UI Actions</h3>
	<p>DevTools contains a number of very helpful UI Actions. One of the most powerful features is the "Save" button with active scope switching capabilities. Never ever loose changes because of switching between scopes and browser tabs at the same time.</p>
	<p>Please refer to the reference section for details.</p>
	
	<h3>Sending a Prompt to a Large Language Model (LLM)</h3>

	<p>The function&#160;<a href="/sys_script_include.do?sys_id=8cece71583e91e5000d5ccc0deaad30e" target="_blank">Prompt()</a>&#160;can be used to send a prompt directly to a large language model, but it requires some setup:</p>
	<ol>
		<li>Navigate to&#160;<a href="/now/app-manager/home/" target="_blank">Plugins</a></li>
		<li>Click button "Sync with Store"</li>
		<li>Search for&#160;<a href="/now/app-manager/home/app/id/8178fec0ce0431105a7c9305875b2dca" target="_blank">Now Assist for Creator</a></li>
		<li>Install "Now Assist for Creator"</li>
		<!--<li>Navigate to&#160;<a href="/now/now-assist-admin/now-assist-panel" target="_blank">Now Assist Admin / Settings / Now Assist panel</a></li>-->
		<!--<li>"Turn on" the Now Assist panel.</li>-->
		<!--<li>Assign the "now.assist.creator" to users.</li>-->
		<li>Navigate to the&#160;<a href="/nav_to.do?uri=sys_one_extend_capability.do?sys_id=0c90ca79533121106b38ddeeff7b12d7" target="_blank">Generic Prompt Capability</a></li>
		<li>Select the related list "OneExtend Definition Configs".</li>
		<li>Set the preferred LLM as the default.</li>
		<li>Open the OneExtend Capability Definition.</li>
		<li>Open the Connection and Credential Alias.</li>
		<li>Select "Create Connection and Credential" and add authentication credentials if not done already.</li>
	</ol> 
<!--

Assign the role "now.assist.creator" to users
Set a default config for the generic prompt capability: /nav_to.do?uri=sys_one_extend_capability.do?sys_id=0c90ca79533121106b38ddeeff7b12d7 
-->

	<h3>Cross Scope Scripting</h3>
	<p>The function&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=cc44a1c91b4b7450edf3642aab4bcb13" target="_blank">RunScriptInScope()</a>&#160;allows to execute code in any scope no matter what the current execution scope is. The function&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=7303bde9db30a410ba15a35305961968" target="_blank">RunScriptInGlobalScope()</a>&#160;specifically allows code execution in the global scope from any other other scope. This allows the use of API functions and classes which are only available in the global scope and NOT in scoped scripts. This allows more flexibility when developing scoped apps - and effectively removes any barriers between apps. The authors of DevTools believe that this is a good thing. Application scopes are NOT a security boundary. Scoped APIs have just not been implemented completely - so using these techniques serves as a workaround for incomplete scoped API implementation. It also allows scoped apps to interact with each other which would otherwise be impossible. I also believe that deployments via update sets are a method of the past. Features should always be deployed as part of scoped (or global scoped) applications via source control or AppRepo. This however requires such apps to perform installation steps - like manipulations of OOTB records - which would not be possible from within their own scope. Hence cross scope scripting techniques finally enable fully automated deployment pipelines without the need of any manual interventions.</p>
	<p>To enable cross scope scripting the system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=9e52826587120300cf2d5fb736cb0b7f" target="_blank">glide.record.legacy_cross_scope_access_policy_in_script</a>&#160;must be set to true. As of the release of this DevTools version the only publicly accessible documentation of the system property's behaviour can be found in the knowledge base article&#160;<a href="https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0779287" target="_blank">KB0779287</a>.</p>
	
	<h3>Baseline Application Version</h3>
	<p>The "Baseline Version" button on the application form is used to baseline an application version. To baseline an application means to provide a new version of an application from a development environment in a linked source control system. This enables installation to downstream instances or for public availability. The following steps are performed:</p>
	<ol>
		<li>Check if there are yet uncommitted changes</li>
		<li>Check if a branch named after the set version already exists</li>
		<li>Sanitize the app (using the DevTools' AppSanity() function)</li>
		<li>Set defaults (using the app's AppSetDefaults() function if it exists)</li>
		<li>Perform application specific baseline activities (using the app's AppBaseline() function if it exists)</li>
		<li>Remove the postfix "WORK IN PROGRESS" from the application name</li>
		<li>Create a new branch named after the set version</li>
		<li>Increase the minor version</li>
		<li>Add the postfix "WORK IN PROGRESS" to the application name</li>
	</ol>

	<p>Teams are well-advised to protect version branches after baselining.</p>

	<p>Perform the following steps to protect a branch in GitHub:</p>
	<ol>
		<li>Navigate to GitHub.</li>
		<li>Navigate to the repository.</li>
		<li>Navigate to "Settings".</li>
		<li>Navigate to "Branches".</li>
		<li>Click button "Add rule".</li>
		<li>Under "Branch name pattern" enter the name of the branch to be protected.</li>
		<li>Select "Require a pull request before merging".</li>
		<li>Select "Lock branch".</li>
		<li>Select "Do not allow bypassing the above settings".</li>
		<li>Click button "Create".</li>
	</ol> 

	<p>Perform the following steps to protect a branch in GitLab:</p>
	<ol>
		<li>Navigate to GitLab.</li>
		<li>Navigate to the project.</li>
		<li>Navigate to "Settings".</li>
		<li>Navigate to "Repository".</li>
		<li>Scroll to "Protected branches" and click button "Expand".</li>
		<li>Click button "Add protected branch".</li>
		<li>Select "Require a pull request before merging".</li>
		<li>Select the branch to be protected.</li>
		<li>Under "Allowed to merge" then under "Roles" select "No one".</li>
		<li>Under "Allowed to push and merge" then under "Roles" select "No one".</li>
		<li>Click button "Protect".</li>
	</ol> 	

	<h3>Shared Applications</h3>
	<p>A "Shared Application" is an application that is created and developed by a 3rd party, members of the open source community, a different department or organization. The application is hence "shared" by that other entity and imported to your own organization.</p>
	<p>This requires such shared application to be treated differently than applications that are created and developed by your own organization:</p>
	<ul>
		<li>Set maintainer and maintainer emails will differ as your own teams must embrace ownership of shared applications.</li>
		<li>The set documentation url should link to your own organization's knowledge management system.</li>
		<li>The set repository url should point to your own organization's source control system repository for the application.</li>
		<li>Whenever a change seems to be required in a shared application a hard choice is to be made: either you can contact the original author and ask for the change or your team(s) make the change themselves. The latter comes with a downside: Any change made may have to be backported into future versions of that shared application.</li>
		<li>When baselining a new version into your source control repository, a shared application must also be treated in a different way. E.g. the "new" version must not be associated with the current date in the release notes and the version number should not be increased during baselining.</li> 
	</ul>
	<p>DevTools helps you with all of that (except for the decisions how required changes are made). By adding a record in the "Shared Applications" table for a shared application, the application is managed properly during baseline.</p> 

	
	<h3>Dependency Management</h3>
	<p>In an ideal world all customizations are implemented in scoped apps (and some global scoped apps if there are really good reasons). And in that same ideal world, non of these apps have any dependencies. Each app can be installed and uninstalled independently. The real corporate world, however, is complex, messy and full of dependencies. For good reasons, separate capabilities are implemented as separate apps and hence these apps have dependencies to each other. For example: apps add fields to tables that are defined in other apps, they run scripts from other apps, or rely on logic implemented in flows from other apps.</p>
	<p>Such dependencies must be managed - that means, the requirements of one app towards other apps and their minimum versions, must be documented and considered when performing deployments.</p>
	<p>DevTools provides means for that documentation and visualization of these dependencies. Go to the sys_app form, switch to the DevTools view to find the dependencies related list (not the OOTB dependencies). The UI action "Dependencies" opens a ui page that visualizes the dependency requirements and status of the current app as a tree and as a list, which can be used as a deployment plan.</p>
	
	<h3>Technical Debt Management</h3>
	<p>A Technical Debt is any code or structure that a development team considers as to-be changed at a later point in time because it implies some form of burden to the development and deployment work to be done today.</p>
	<p>Technical debts need to be managed - and that starts with documenting it. DevTools contains a table to store Technical Debt records which are part of an application and hence are deployed to target-systems. This allows for reporting, work planning and automated documentation.</p>
	<p>Unfinished, defective or deprecated features that are part of an application at the time of a version baseline also represent a form of Technical Debt - as all of these require future work. Such features should eventually be hidden from users or prevented to impact the behavior of an application.</p>
	<p>In cases where the technical debt is associated with a feature that needs to be turned on or off, a technical debt may have an ID and a boolean "switch" that can be used to control logic around these features. Developers can use the following pattern to control how code related to a feature that is currently considered as (or associated with) a Technical Debt should behave:</p>
	<pre>if (x_snc_devtools.GetTechnicalDebtSwitchState('x_your_scope','id_of_the_technical_debt') == true)
{
	// Hide unfinished work
	// Deactivate defective features
	// Deactivate deprecated features
}</pre>
	<p>If the Technical Debt with the given id exists and the switch is set to true, the function returns true, otherwise false.</p>
	
	<h3>Evaluator Errors</h3>
	<p>DevTools helps to surface evaluator errors (which are logged as warnings OOTB). The system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=439f16571b417510cd6153d16b4bcb80" target="_blank">x_snc_devtools.ui.show_evaluator_errors.minutes</a>&#160;controls whether and for how long evaluator errors should be displayed to admin users.</p>
	
	<h3>Force to Record Scope</h3>
	<p>DevTools enforces to switch to the scope of the current record on a form. This prevents any situation in which a form was loaded in the correct scope, changes are being made, and lost because the user changed the scope in a different tab. The OOTB behavior is downright annoying. DevTools comes to the rescue. The system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=7b9d7bb2db3e11106a03dad1f3961901" target="_blank">x_snc_devtools.ui.force_scope</a>&#160;controls whether the scope should be changed when loading and saving a form. This may lead to some users being confused by the new (and unexpected) behavior - however, developers quickly become used to it and prefer the behavior over the OOTB behavior.</p>	
	<h3>Instance Pipeline Names</h3>
	<p>An instance has a technical name (sometimes matching the domain name, but not always). This technical name can be used to define logic that depends on the instance on which code is executed. However, this is not a good practice. In complex environments, where applications may be shared across multiple production instances, any logic that directly depends on a specific instance may cause problems. The DevTools extension point allows to implement the function DevToolsGetInstancePipelineName() which allows to map technical names to so-called pipeline names (e.g., "dev", "test" or "prod"). The function GetInstancePipelineName() can then be used to get the current instance pipeline name to build instance specific logic.</p>	
	
	<h3>Service Portal Deactivation</h3>
	<p>DevTools allows you to deactivate specific Service Portals.</p>
	<p>A new field "Active" is added to the&#160;<a href="/nav_to.do?uri=sp_portal_list.do%3F" target="_blank">sp_portal</a>&#160;table. Once set to false, the corresponding Service Portal will just disappear and is no longer accessible.</p>

	<h3>Fix the Flow Execution Domain Issue described in KB0998966</h3>
	<p>DevTools contains the business rule&#160;<a href="/nav_to.do?uri=sys_script.do?sys_id=ad95de3247f6d510a4b0d4fe536d432b" target="_blank">sys_flow_context - Set domain</a>&#160;which implements the workaround to the issue described in&#160;<a href="https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0998966" target="_blank">KB0998966</a>.</p> 
	
	<h3>Prevent Useless Instance Scan Check Executions</h3>
	<p>Instance Scan linter checks execute on all records that have at least one script field. However, some records may have a script field but do not use it or the script field does not have to be checked because it is not relevant (based on the configuration of that record).</p>
	<p>Examples are:</p>
	<ol>
		<li>sys_hub_flow_variable records are derived from sys_dictionary which contains a script field - but for a sys_hub_flow_variable record this script field is never relevant.</li>
		<li>sys_security_acl records where the script field is only relevant if the field "advanced" is set to true.</li>
	</ol>
	<p>The business rule &#160;<a href="/nav_to.do?uri=sys_script.do?sys_id=b7fad21a1be06d105b76777d8b4bcbbe" target="_blank">sys_metadata - Prevent useless checks</a>&#160;prevents checks from running in such cases which may significantly reduce the time required to scan such records - or apps that contain such records.</p>
	
	<p>Developers may create their own Application Files which also can contain script fields. In some cases such script fields are not used - but also scanned by Instance Scan linter checks. The DevTools extension point allows to inject additional rules that can help to avoid useless checks on such records. To define and inject such rules follow these steps</p>
	<ol>
		<li>Implement the&#160;<a href="/nav_to.do?uri=sys_extension_point.do?sys_id=e3a183be1bae7010edf3642aab4bcbdc" target="_blank">DevTools Extension Point</a>.</li>
		<li>Implement the function GetEncodedQueryToPreventUselessChecks using the following template:
<pre>
function GetEncodedQueryToPreventUselessChecks(rules)
{
	// The following combination is already supported by DevTools
	// The following rule is for demonstration purposes only
	x_snc_devtools.SetValue(
		{
			query: 'virtual=true', // The query to be used to avoid loading the record
			derived: true // true if applicable to derived tables, false if not
		},
		rules,
		'script', // only script checks are supported at this time
		'sys_dictionary' // The class name of the table to apply the rule to
		); 

	return rules; // always return the rules object, otherwise all rules are deleted
}
</pre>
		</li>
		<li>Replace "sys_dictionary" by the name of the table that this rules applies to.</li>
		<li>Replace the query by the condition that identifies a record that actually contains a script and hence should be scanned.</li>
	</ol>


	<h3>Create User by Email</h3>
	<p>DevTools features the "Create User by Email" button to the User list. Follow these steps to configure the feature:</p>
	<ol>
		<li>Set the DevTools system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=6f6bf0961b92a150cd6153d16b4bcb14" target="_blank">ui.createuserbyemail_button</a>&#160;to "true".</li> 
		<li>Create the GLOBAL system property "devtools.createuserbyemail.groups" and add a comma separated list of group Sys IDs to be assigned to the new users if needed.</li>
	</ol>

	<h3>Create and Send Credentials</h3>
	<p>DevTools features the "Generate and Send Credentials" button to the User form. Follow these steps to configure the feature:</p>
	<ol>
		<li>Set the DevTools system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=128efb851b6a2110cd6153d16b4bcbc9" target="_blank">ui.generateandsendcredentials_button</a>&#160;to "true".</li> 
		<li>Verify that the GLOBAL system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=856303e90a0a0bc50164129959388444" target="_blank">glide.email.smtp.active</a>&#160;is set to "true".</li>
	</ol>
	
	<h3>Record Transporter</h3>
	<p>Data is managed on each instance and should not be "deployed". Code is part of applications and should be deployed as such.</p>
	<p>However there are cases where the boundaries are blurry. If data records (i.e. records that are not in a table derived from sys_metadata) must be part of an application the Record Transporter comes to the rescue.</p>
	<p>The Record Transporter allows to store any record that is not a sys_metadata derivative into a table that is. The table in which these records are stored is x_snc_devtools_transporter_record (which is derived from sys_metadata) and hence its records are captured as part of an application (in source control). Such records are associated to a Record Transporter Package (in table x_snc_devtools_transporter_package).</p>
	<p>To "pack" records into a Package, create a Package in the GUI - but make sure to select the scope of the application that should contain the package - then use the function RecordTransporterRecordPack() to store individual records into the package.</p>
	<p>To properly "store" to be deleted records use the function RecordTransporterPackageReset() before adding records to a package. The function will mark all existing records in the package to be deleted on the target instance. Once added again, these records will be stored to the package to be inserted or updated. This allows to keep track on deleted records of earlier versions of the package.</p>
	<p>During installation use the method InstallerAPI::RecordTransporterPackageUnpack() to unpack the contained records on the target instance.</p>
	<p>Code to store records could look like this:
		<pre>
// To set all existing records as to-be-deleted
x_snc_devtools.RecordTransporterPackageReset('x_your_scope.demo');
			
// Identify records based on whatever logic
var grRecords = new GlideRecord('x_snc_devtools_test');
grRecords.addQuery('name','STARTSWITH','Test ');
grRecords.query();
while (grRecords.next())
{
	// Pack the identified record into the package
	x_snc_devtools.RecordTransporterRecordPack('x_your_scope.demo',grRecords);
}
		</pre>
	</p>
	
	<p>To unpack records, implement the AppInstall() function in your app like this:
		<pre>	
function AppInstall()
{
	var installer = new x_snc_devtools.InstallerAPI(x_snc_devtools.GetAppName('x_your_scope'));
	
	installer.RecordTransporterPackageUnpack('x_your_scope.demo');			

	return installer.Finish();
}
		</pre>
	</p>

	<h3>CMDB CI Class "ServiceNow App"</h3>
	<p>DevTools introduces a new CMDB CI class called "ServiceNow App" which represents a ServiceNow app (scoped or global) that is installed on an instance or provided in a Source Control System for installation.</p>
	<p>Functions prefixed with "ConfigurationItemServiceNowApp" can be used to insert or update these CIs.</p>  

	<h3>Auto-generated documentation</h3>
	<p>If the system property "x_snc_devtools.code.auto_generate_documentation" is set to "true" a business rules will add some auto-generated documentation to the description of Script Includes that contain a class if the code has changed.</p>
	
	<h3>Field Formatting</h3>
	<p>DevTools can help to format (float) numbers in forms, related lists and list views in the classic UI - Polaris, however, is not supported yet! Follow these steps to activate the feature:</p>
	<ol>
		<li>Set the DevTools system property&#160;<a href="/nav_to.do?uri=sys_properties.do?sys_id=b9fbd89cdb0d8954bcced03cd39619cb" target="_blank">ui.formatting</a>&#160;to "true".</li> 
		<li>Implement the&#160;<a href="/nav_to.do?uri=sys_extension_point.do?sys_id=e3a183be1bae7010edf3642aab4bcbdc" target="_blank">DevTools extension point</a>.</li>
		<li>Implement the function DevToolsGetFormatConfig using the following template:
<pre>
function DevToolsGetFormatConfig(grRecord)
{
	var strTable = grRecord.getRecordClassName();

	if (strTable == 'your_table')
	{
		var formatconfig = {
			your_field: {
				decimals: 2,
				postfix: ' %'
			}
		};
		return formatconfig;
	}

	return false;
}
</pre>
		</li>
		<li>Replace "your_table" by the name of the table that contains the fields to be formatted. Add support for more tables if needed.</li>
		<li>Replace "your_field" by the name of the field to be formatted. Add more fields if required.</li>
		<li>"decimals" specifies how many decimals digits should be used after the decimal delimiter.</li>
		<li>"postfix" specifies a constant string to be added after the formatted number.</li>
		<li>Note that the function will be called for each individual record, so the formatting can be dependent on other values of the same record.</li>
		<li>You may consider session or transaction caching techniques to improve performance.</li>
	</ol>
	
	<h3>Manage Record Order (Record Ranking)</h3>
	<p>The function RecordManageOrder() can be used set the records in a table into a definitive sequence based on a given integer field. The function is designed to be called in an async after update/insert/delete business rule like this:</p>
<pre>
(function executeRule(current, previous /*null when async*/) {
	
	var RecordManageOrder = x_snc_devtools.RecordManageOrder;
	RecordManageOrder('your_table', 'order', current ? current.sys_id : null, current ? current.order : null);

})(current, previous);
</pre>
<p>"your_table" is the technical name of the table in which records should be sorted (or ranked). "order" is the name of the integer field that defines the ordering sequence.</p>
<p>The "current" object is null in an after delete async business rule, hence the conditional statements.</p>

	<h3>Interactive Lengthy Processes</h3>
	<p>Implementing a user-interactive lengthy process is not trivial. Follow the steps below - and make use of some DevTools components - to create a lengthy process that is triggered by the user, propagaes progress information to the user interface and reports back the result. The following checklist goes bottom-up, it starts at the "bottom" with the function that performs the lengthy process and goes "up" to the user interface.</p>

	<ol>
		<li>Create a Script Include with a single function that performs the lengthy process. Example:&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=7ac969a9dbc095109232dad1f39619c7" target="_blank">x_snc_devtools.AppVersionBaseline</a></li>
		<li>Add progress tracking to the function that performs the lengthy process using the&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=1baddd5b1b9bd9105b76777d8b4bcb2a" target="_blank">x_snc_devtools.ProgressTrackerAPI</a>&#160;class. The following boilerplate code illustrates how to use the ProgressTrackerAPI class:</li>
<pre>
var progresstracker = new x_snc_devtools.ProgressTrackerAPI();

progresstracker.Start();
progresstracker.SetText('Starting lengthy process...');
progresstracker.SetPercentageProgress(1);

// Do something lengthy...

progresstracker.SetText('Continuing lengthy process...');
progresstracker.SetPercentageProgress(50);

// Do more lengthy things...

progresstracker.SetText('Finishing lengthy process...');
progresstracker.SetPercentageProgress(90);

// Do one more thing...

progresstracker.SetPercentageProgress(100);

// Report success
progresstracker.SetResult(null,true,'Lengthy process complete.');

// or failure
progresstracker.SetResult(null,false,'Lengthy process failed!');
</pre>
		<li>Create a Script Include and add a "WorkerAPI" class (if it does not exist in the application yet). The Worker API class is required to run a function asynchornously in a separate process. Create a member function with exactly the same name is the Script Include function that performs the lengthy process. Example:&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=6689d2abdb535d106a03dad1f396197d" target="_blank">x_snc_devtools.DevToolsWorkerAPI</a>.</li>
		<li>Configure the WorkerAPI Script Include to be accessible from "All application scopes".</li>
		<li>Create a Script Include and add a "ClientAPI" class (if it does not exist in the application yet). The Client API class is required to execute a server side script from the client side. Example:&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=7357b9131b8bb090edf3642aab4bcb10" target="_blank">x_snc_devtools.DevToolsClientAPI</a>.</li>
		<li>Set the ClientAPI Script Include to be "Client callable".</li>
		<li>Add the function "start" to the ClientAPI class. The "start" function is used to invoke lengthy processes. The function has to receive parameters (using this.getParameter()), dertermine which lengthy process is requested (using the "sysparm_ajax_processor_command" parameter), initiate the lengthy process as an asynchonous process (using the Worker API class) and return the Sys Id of the worker record back to the client. Example:&#160;<a href="/nav_to.do?uri=sys_script_include.do?sys_id=7357b9131b8bb090edf3642aab4bcb10" target="_blank">x_snc_devtools.DevToolsClientAPI</a>. Check out the following boilerplate code:</li>
<pre>
start: function()
{
	if (gs.hasRole('x_your_scope.your_role') == false)
	{
		return '';
	}

	var strWorkerId = '';
	var strTrackerSourceTable = '';
	var strTrackerType = '';

	var strCommand = x_snc_devtools.GetStringValue(
		this.getParameter("sysparm_ajax_processor_command"));
	if (strCommand == 'your_lengthy_process')
	{
		var strRecordSysId = x_snc_devtools.GetStringValue(this.getParameter("sysparm_ajax_processor_record_sys_id"));
		if (strRecordSysId == '')
		{
			x_snc_devtools.LogError('YourClientAPI.start(): YourLengthyProcess: no record_sys_id specified.');
			return '';
		}
		var grRecord = x_snc_devtools.GetRecord('your_table',strRecordSysId);
		if (x_snc_devtools.IsValidRecord(grRecord) == false)
		{
			x_snc_devtools.LogError('YourClientAPI.start(): YourLengthyProcess: Record not found.');
			return '';
		}

		strTrackerSourceTable = 'your_table';
		strTrackerType = 'your_lengthy_process';

		var strProgressName = "Processing record "+grRecord.number;

		var params = {};
		params['strRecordSysId'] = strRecordSysId;

		strWorkerId = x_snc_devtools.StartWorker(
			strProgressName,
			'x_your_scope.YourWorkerAPI',
			'YourLengthyProcess',
			params);
	}
	else
	{
		x_snc_devtools.LogError('YourClientAPI.start(): Unknown command!');
	}

	
	if (strWorkerId == '')
	{
		return '';
	}

	var nCountDown = 1000;
	while (nCountDown > 0)
	{
		var grTracker = new GlideRecord('sys_execution_tracker');
		grTracker.orderByDesc('sys_created_on');
		grTracker.addQuery('source_table','=',strTrackerSourceTable);
		grTracker.addQuery('type','=',strTrackerType);
		grTracker.addQuery('state', 'IN', '0,1');
		grTracker.query();
		if (grTracker.next())
		{
			return x_snc_devtools.GetStringValue(grTracker.sys_id);
		}
		nCountDown--;
	}

	return strWorkerId;
},
</pre>
		<li>Add a UI Script containing a client-side function that performs the user interaction to prepare and start the lengthy process and shows its progress. 		Example:&#160;<a href="/nav_to.do?uri=sys_ui_script.do?sys_id=452bfe24dbb84210f0f1d03cd3961940" target="_blank">x_snc_devtools.DevToolsClientAPI</a>. Check out the following boilerplate code:
		</li>
<pre>
function YourLengthyProcess(strRecordSysId)
{
	var strRecordSysId = GetStringValue(strRecordSysId);
	var strTitle = 'Your Lengthy Process';
	
	var bUserConfirmation = false;

	StateStart();

	function StateUserConfirmation()
	{
		DoModalConfirm(
			strTitle,
			strMessage
			+'\n\n'
			+'Ready to start the lengthy process?',
			StateUserConfirmationUserResponse);
	}

	function StateUserConfirmationUserResponse(bResult)
	{
		if (bResult == false)
		{
			StateEnd();
			return;
		}
		bUserConfirmation = true;
		StateStart();		
	}

			

	function OnExecutionComplete(dialog,tracker)
	{
		var buttonViewResults = GetElementById('sysparm_button_view_results');
		if (buttonViewResults)
		{
			buttonViewResults.style.display = "none";
		}

		var buttonClose = GetElementById('sysparm_button_close');
		if (buttonClose)
		{
			buttonClose.on('click', function()
				{
					StateEnd();
				});
		}
	}
	
	function OnExecutionFailed(dialog)
	{
		StateError('Lengthy Process failed!');
	}
	
	function OnStatusUpdate(dialog)
	{
	}

	function StateAbort()
	{
		DoModalMessage(
			strTitle,
			'Aborting...',
			StateEnd);
		return;	
	}

	function StateError(strErrorMessage)
	{
		DoModalMessage(
			strTitle,
			'ERROR: '+strErrorMessage,
			StateEnd);		
		return;	
	}	

	function StateEnd()
	{
		RedirectToRecord('your_table',strRecordSysId,'');
	}

	function StateStart()
	{
		if (bUserConfirmation == false)
		{
			StateUserConfirmation();
			return;
		}

		DoModalProgress(
			strTitle,
			'Lengthy Process',
			'x_your_scope.YourClientAPI',
			{
				command: 'your_lengthy_process',
				record_sys_id: strRecordSysId
			},
			{
				close:
				{
					title: 'Close'
				}
			},
			{
				callbackOnExecutionComplete: OnExecutionComplete,
				callbackOnExecutionFailed: OnExecutionFailed,
				callbackOnStatusUpdate: OnStatusUpdate,
			});
	}
}
</pre>
<li>Add a client-side script that triggers the client-side function. E.g. a client-side UI Action that adds a button on a form. Example:&#160;<a href="/nav_to.do?uri=sys_ui_action.do?sys_id=869da5addbc095109232dad1f3961993" target="_blank">UI Action: "Baseline Version"</a>.
		</li>
	</ol>
	<p>Once all components are in place, the procedure can be tested. Note that if a server-side script that is triggered through a client AJAX request runs into an evaluator error such errors ARE NOT LOGGED. This is annoying and makes debugging more difficult. If your process shows unexpected behavior, use debug logging to narrow down the code that fails.</p> 

	<h3>How to unblock Instance Scan?</h3>
	<p>On rare occasions an Instance Scan run does not finish properly and remains in an undefined state. This prevents further Instance Scan checks to run. Follow these instructions to unblock Instance Scan and to enable further scan operations:</p>
	<ol>
		<li>Navigate to the list of&#160;<a href="/now/nav/ui/classic/params/target/loading_transactions.do" target="_blank">active transactions</a>.</li>
		<li>If there is a transaction of Type "instance_scan", select it and choose "Kill".</li>
		<li>Navigate to the &#160;<a href="now/nav/ui/classic/params/target/scan_result_list.do" target="_blank">Scan Results list</a>.</li>
		<li>Check if there is a Scan Result record in status "In Progress". Delete this Scan Result record.</li>
		<li>Navigate to the &#160;<a href="now/nav/ui/classic/params/target/sys_progress_worker_list.do" target="_blank">Progress Workers list</a>.</li>
		<li>Check if there is a Progress Worker record with name "Instance Scan" in state "Running". Delete this Progress Worker record.</li>		
		<li>Navigate to the &#160;<a href="now/nav/ui/classic/params/target/sys_execution_tracker_list.do" target="_blank">Execution Trackers list</a>.</li>
		<li>Check if there is an Execution Tracker record with name "Instance Scan" and completion time "empty". Delete this Execution Tracker record.</li>			
	</ol>

	<h2>Reference</h2>

	<h3>Configuration Options</h3>
	<g2:no_escape>$[docapi.RenderProperties()]</g2:no_escape>

	<h3>Tables</h3>
	<g2:no_escape>$[docapi.RenderTables()]</g2:no_escape>	

	<h3>UI Actions</h3>
	<g2:no_escape>$[docapi.RenderUIActions()]</g2:no_escape>		
	
	<h3>Script Includes</h3>
	<g2:no_escape>$[docapi.RenderScriptIncludes()]</g2:no_escape>
	
	<h3>UI Scripts</h3>
	<g2:no_escape>$[docapi.RenderUIScripts()]</g2:no_escape>	
	
	<h3>Test step configurations</h3>
	<p>DevTools contains the following customized test step configurations:</p>
	<g2:no_escape>$[docapi.RenderTestStepConfigurations()]</g2:no_escape>
	
	<h3>Extension Points</h3>
	<g2:no_escape>$[docapi.RenderExtensionPoints()]</g2:no_escape>		

	<h3>Business Rules</h3>
	<g2:no_escape>$[docapi.RenderBusinessRules()]</g2:no_escape>	

	<h3>Dependencies</h3>
	<g2:no_escape>$[docapi.RenderDependencies()]</g2:no_escape>		

	<h3>Technical Debts</h3>
	<g2:no_escape>$[docapi.RenderTechnicalDebts()]</g2:no_escape>			
	
	<h2>License</h2>
	<g2:no_escape>$[docapi.RenderCopyright(2020,'Sascha Wildgrube')]</g2:no_escape>
	<g2:no_escape>$[docapi.RenderLicense()]</g2:no_escape>
	
	<h2>Release Notes</h2>

	<h3>1.119.0 - 2025-04-11</h3>
	<ol>
		<li>Washington is no longer actively supported.</li>
		<li>UI Actions "Up", "Save" and "List" now require the admin role. Since Xanadu the explicit roles plugin is no longer shipped and the snc_internal role is no longer available OOTB.</li>
		<li>Added function IsAppInstalled().</li>
		<li>GetPackageDependencyTree() now marks dependencies with missing Sys Ids as "undefined".</li>
		<li>GetDependencyListFromTree() now handles dependencies without Sys Ids properly.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Updated all UI Action action names to contain the prefix "devtools_" and to follow a consistent naming convention.</li> 
		<li>Improved ATF test for GetRecordsFromUpdateXml() to avoid false-negatives.</li>
	</ol>


	<h3>1.118.0 - 2025-03-21</h3>
	<ol>
		<li>DevTools is fully tested in Yokohama.</li>
		<li>Function RunTestSuite() has been adapted to backward incompatible API behavior change in Yokohama.</li>
		<li>Added function WaitForTracker().</li>
		<li>ATF test for InstanceScanCheckOnRecord() is no longer dependent on OOTB checks (which are no longer shipped in Yokohama).</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>GetParentRecord() and the "Up" UI Action now support the x_snc_devtools_technical_debt table.</li>
	</ol>


	<h3>1.117.0 - 2025-03-19</h3>
	<ol>
		<li>The DevTools extension point now supports the IsTechnicalUser() member function, which can be used to override the default behavior of the IsTechnicalUser() Script Include function which determines if a user is a technical user. Extended AppBuilder() to create the DevToolsIsTechnicalUser() function.</li>
		<li>Added function CreateTinyUrl().</li>
		<li>Refactored HtmlRenderPageEvaluatorLog() to use CreateTinyUrl().</li>
		<li>Added UI Script StringFormat().</li>
		<li>ExecuteBusinessRuleShowRecentEvaluatorErrors() now shows a condensed error message if the recently logged evaluator errors are not logged during a transaction of the current user. This prevents spamming developers too much with evaluator errors unrelated to their work.</li>  
		<li>On the evaluator error log list a message is displayed to inform the maintainer of DevTools on evaluator errors caused by OOTB records.</li>
		<li>IsPrimaryRequestUrl() no longer considers urls longer than 500 characters as non-primary.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
	</ol>


	<h3>1.116.0 - 2025-03-11</h3>
	<ol>
		<li>GetArrayValue() now supports the delimiter parameter.</li>
		<li>Added guidance on how to build "Interactive Lengthy Processes" to the manual.</li>
		<li>Improved html layout in HtmlRenderProcessMap() by ending the floating area.</li> 
		<li>Added syntax editor macro for StartWorker().</li>
		<li>The business rule "sys_metadata - set scope to record scope" no longer enforces the scope on Service Portal Editor pages - to avoid unintended side-effects.</li>
	</ol>


	<h3>1.115.0 - 2025-02-28</h3>
	<ol>
		<li>WhatRuns() now also supports UI Policies.</li> 
		<li>MakeTestNameForRecord() and GetTestRecord() now also support sys_hub_flow.</li>
	</ol>


	<h3>1.114.0 - 2025-02-27</h3>
	<ol>
		<li>Added function HtmlRenderProcessMap().</li>
		<li>Added function GlideRecordSetAbortAction().</li>
		<li>HttpRequest() now supports OAuth2 authentication.</li>
		<li>InstallerAPI::Finish() now logs a failed installation as an error.</li>
		<li>The length of sys_ui_policy.x_snc_devtools_table has been set from 40 to 80 - this prevented the creation of UI Policy for tables with names longer than 40 characters.</li> 
	</ol>


	<h3>1.113.0 - 2025-02-14</h3>
	<ol>
		<li>IsValidVersion() now supports the bSemantic parameter to check explicitly against a three component semantic version.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>SetCurrentScope() now returns true if the given scope Sys ID was valid and an attempt wasmade to set the scope, or false if not.</li>
		<li>Updated DevTools view for sys_ui_policy to resemble the advanced view.</li>
		<li>Added view rule for sys_ui_policy to enforce the new DevTools view.</li>
		<li>Activated view rule to enforce DevTools view on cmn_map_page.</li> 
	</ol>


	<h3>1.112.0 - 2025-01-27</h3>
	<ol>
		<li>An application can now be flagged to contain a showstopper and details can be provided in a text field on the sys_app form - if the application is flagged it cannot be baselined.</li> 
		<li>UI Script functions AppVersionBaseline() and SharedAppVersionBaseline() now both respect the showstopper flag.</li>
		<li>Added function GetPropertyRecord().</li>
		<li>DevTools now allows to create UI Policies for out-of-scope tables.</li>
		<li>IsProperty() no longer would return true if the parameter is an empty string and there is really a (invalid) system property with an empty name (also avoiding false negative ATF test results).</li> 
		<li>Improved ATF test for GetRecordsFromUpdateXml() to avoid testing against "DELETE" update xml records - this avoids eventual false negatives.</li>
		<li>Further improvements in AzureDevOpsAPI.</li>
		<li>Fixed AzureDevOpsAPI::GetFilesFromBranch().</li>
	</ol>


	<h3>1.111.0 - 2025-01-19</h3>
	<ol>
		<li>Added function Transliterate() to transliterate Ukrainian Cyrillic text into latin characters.</li> 
		<li>Added function IsUiActionVisibleExecuteNow() to control if the UI Action "Execute Now" on sysauto derived tables should be displayed. The UI Action "Execute Now" will now also show on sysauto derived tables (other than sysauto_script) where needed - which was not the case.</li>
		<li>Added function HtmlRenderApplications() to enable the reuse of the applications table on other pages.</li>
		<li>AppSanity() now moves global system properties that are erroneously associated to an application back into global scope.</li>
		<li>GetRoleRecord() is no longer returning an (invalid) role that has an empty name - preventing ATF tests to fail if roles without names are present on the instance.</li> 
	</ol>


	<h3>1.110.0 - 2025-01-03</h3>
	<ol>
		<li>Added function MakeTestNameForRecord() and refactored GetTestRecord() and CreateTestForRecord() to use it.</li>
		<li>Added function GetRecordsFromUpdateXml() and refactored GetAppUncommittedFiles() to use it.</li>
		<li>Added function GetDependencyRecord() - using the ArtificalDeveloper.</li>
		<li>Added function GetRepoConfigRecord() - using the ArtificalDeveloper.</li>
		<li>Added function AppSyncAllDependencies() and refactored business rule "sys_app - sync dependencies" to use it.</li>
		<li>GetRecordsFromUpdateXml() and GetAppUncommittedFiles() now also support sys_choice, sys_dictionary and sys_documentation records.</li>
		<li>AzureDevOpsAPI::GetFilesFromRepo() is now processing the response properly and returns an array of file paths.</li>
		<li>AzureDevOpsAPI::GetFile() is now processing the response in a way that allows proper error handling.</li>
		<li>ConfigurationItemServiceNowAppInsertOrUpdate() now handles new versions in new branches properly and creates a new CI for each separate version that is available in a repository.</li>
		<li>GetParentRecord() and the "Up" UI Action now support the x_snc_devtools_dependency table.</li>
		<li>Refactored Business Rule "x_snc_devtools_dependency - duplicates" to use GetDependencyRecord() and to avoid new CodeSanity finding against the use of GlideRecord outside Script Includes.</li>
		<li>Refactored Business Rule "sys_app - set repo url" to use GetRepoConfigRecord() and to avoid new CodeSanity finding against the use of GlideRecord outside Script Includes.</li>
		<li>Refactored UI Action "Show Table Dictionary Record" to use GetDictionaryRecord() and to avoid new CodeSanity finding against the use of GlideRecord outside Script Includes.</li>
		<li>Improved GetDictionaryRecord() and associated ATF test.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
	</ol>


	<h3>1.109.0 - 2024-12-26</h3>
	<ol>
		<li>Added special thanks to Kevin Janssen for his contribution to the AzureDevOpsAPI class to the manual.</li>
		<li>Added function AppCreate().</li>
		<li>Added UI Script SourceControlCommit().</li>
		<li>Business rule "sys_metadata - set scope to record scope" now sets the scope properly for new records where the scope of the new record is defined by an url parameter.</li> 
		<li>DevToolsWorkerAPI now supports SourceControlCommitToCurrentBranch().</li>
		<li>GetAppUncommittedFiles() now returns files sorted by sys_name.</li>
		<li>MakeJson() now handles potential exceptions thrown by JSON.stringify().</li>
		<li>UI Script GetElementById() can now also be used on UI pages (where no g_form object is available).</li>
		<li>GetParentRecord() and the "Up" button now support ais_child_table, ais_datasource_attribute, ais_search_source and ais_datasource_field_attribute.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>InstanceReset() now hides the menu "Process Mining".</li>
	</ol>


	<h3>1.108.0 - 2024-12-13</h3>
	<ol>
		<li>Added class AzureDevOpsAPI to interface with the AzureDevOps API for source control operations.</li>
		<li>Added UI Script MakeJson().</li>
		<li>Added UI Script SetCurrentBrowserUrl().</li>
		<li>Added UI Script StringReplace().</li>
		<li>GetParentRecord() no longer considers the sys_scope record associated with a sys_metadata record (or derived record) if there is no explicit meaningful parent record.</li>
		<li>GetParentRecord() and the "Up" button now supports catalog_script_client.</li>
		<li>GetParentRecord() and the "Up" button now supports item_option_new records that refer to variable sets.</li>
		<li>RecordTransporterRecordPack() now prevents packing label ("Tag") and related records. Tags are a personalization feature and should hence never be part of an application deployment.</li> 
		<li>Replaced menu link to "Flow Designer" to "Workflow Studio".</li> 
		<li>Added menu link to "Access  Analyzer".</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>ATF Test Step Configuration "DevTools - Check scoped app sanity" no longer checks system properties as such checks are fully covered in the CodeSanity Scan Suite.</li>
	</ol>


	<h3>1.107.0 - 2024-11-29</h3>
	<ol>
		<li>Extended IsValidSysId() to consider that the OOTB sys_app_application "System Import Sets" uses "import_sets" as its Sys ID.</li>
		<li>Extended ATF for GetRecord() to check if it can load the OOTB sys_app_application record "System Import Sets".</li>
		<li>GlideRecordSetValue() now converts the given value null to an empty string. This will effectively "unset" the field instead of doing nothing. This also impacts unpacking the json payloads of the Record Transporter.</li>  
		<li>Improved GetPackageRecord() to avoid a warning message if the given scope is not found.</li>
		<li>GitHubAPI::Request() now also logs an error if it receives an empty or invalid response body.</li>
		<li>Auto-documentation feature is now active by default. This will add the list of methods of a class defined in a Script Include to its description automatically.</li>
		<li>UI Action "Create Technical User" is now active by default.</li>
		<li>UI Action "Create Test User" is now active by default.</li>
		<li>UI Action "Create User by Email" is now active by default.</li>
		<li>UI Action "Generate and Send Credentials" is now active by default.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Added the "Application" column to the "Dependency" list view.</li>
		<li>Added x_snc_devtools_dependency to the link directory.</li>
		<li>Improved test for GetTableFromSysId() to avoid dependency to OOTB CIs and hence false-negative test results.</li>
		<li>Test for HttpRequest() no longer uses example.com to avoid false-negative results in air-gapped instances.</li>
		<li>Improved installation instructions to make sure the glide.record.legacy_cross_scope_access_policy_in_script system property is created if it does not exist.</li>
	</ol>


	<h3>1.106.0 - 2024-11-13</h3>
	<ol>
		<li>Added function GetViewRecord().</li>
		<li>Added UI Script ArrayRemoveValue().</li>
		<li>Added method InstallerAPI::DefineFormSection().</li>
		<li>Added method InstallerAPI::DefineList().</li>
		<li>Improved IsValidUrl() to detect more valid urls.</li>
		<li>Added section for "Generative AI Controller" to the link directory.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>GetPackageDependencyTree() now also returns the package_class as defined by the dependency record.</li>
		<li>HtmlRenderDependencies() now renders the package type of missing store app/plugin dependencies correctly.</li>
		<li>Deprecated() now only shows a warning banner if the user has the "admin" role.</li>
	</ol>


	<h3>1.105.0 - 2024-11-08</h3>
	<ol>
		<li>Added function RunDefaultTestSuite().</li>
		<li>Added function RunDefaultTestSuitesWithDependencies().</li>
		<li>The Application Overview page now also displays the date and time and results of the most recent default test suite run.</li> 
		<li>The DevTools extension point now supports the Prompt() member function, which can be used to override the default behavior of the Prompt() Script Include function which uses the generic prompt capability of the Generative AI Controller plugin. Extended AppBuilder() to create the DevToolsPrompt() function.</li>
		<li>WaitForWorker() now accepts a second parameter to control how many seconds it should wait in each iteration. All DevTools functions that use WaitForWorker() now either sleep 1 or 2 seconds in each iteration.</li>
		<li>Removed test "DevTools - DevToolsWorkerAPI".</li>
		<li>InstanceReset() now also deactivates the notification "On-Call Schedule - Gaps and Conflicts".</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>AppInstall() now deactivates the ACL that prevents non-maint users from seeing all fields of a One Extend Capability (which is a defect in Xanadu as of patch 3).</li>
	</ol>


	<h3>1.104.0 - 2024-11-02</h3>
	<ol>
		<li>Added function Prompt() to send a generic prompt to a large language model (LLM). Added the system property x_snc_devtools.prompt.capability to specify the capability to be used when invoking the internal API.</li>
		<li>Added chapter in manual on "Sending a Prompt to a Large Language Model (LLM)".</li>
		<li>Added function RunTest().</li>
		<li>Added function RunTestSuite().</li>
		<li>Added UI Action "Create Test" for Script Includes.</li>
		<li>Added system property "x_snc_devtools.ui.createtest_button" to control if the "Create Test" button should be visible.</li>
		<li>Added function CreateTestForRecord().</li>
		<li>GetTestRecord() is now more strict and supports global Script Includes.</li>
		<li>The "Background Scripts" menu item now points to the "modern" version and stays in the same tab.</li> 
		<li>Fixed a defect in UI Script ServerRequest() that caused a client-side error if the request fails and no callback function is specified.</li>
		<li>HtmlRenderWhatRuns() caused a deprecation warning when opening the "What Runs" page. this has been fixed.</li>
		<li>Added chapter "How to unblock Instance Scan?" to the manual.</li>
	</ol>


	<h3>1.103.1 - 2024-10-23</h3>
	<ol>
		<li>Fixed a defect in AppVersionBaseline() that prevented branch protection for shared applications or if an application has dependencies.</li>
	</ol>


	<h3>1.103.0 - 2024-10-22</h3>
	<ol>
		<li>Added function RecordSetValueJson().</li>
		<li>Added function UxStyleSetValue().</li>
		<li>Added function InstallerAPI::UxStyleSetColor().</li>
		<li>Added function GitHubAPI::ProtectBranchReadOnly().</li>
		<li>Added function GitLabAPI::ProtectBranchReadOnly().</li>
		<li>Function AppVersionBaseline() now invokes the function AppVersionBaselineOnFinish() after baselining is complete. Added function AppVersionBaselineOnFinish() to the DevTools extension point.</li>
		<li>TestAPI now supports up to 15 parameters for a test case.</li>
		<li>HttpRequest() no longer enforces the "post" http method if a request body is provided.</li>
		<li>Added steps to protect a branch in GitHub to the manual.</li>
		<li>Added steps to protect a branch in GitLab to the manual.</li>
		<li>Added sys_es_latest_script and sys_module to the link directory.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Removed the "DevTools" system property category. The "DevTools Options" menu item now opens the sys_properties list view filtered by "DevTools".</li>
		<li>AppSanity() now moves any sn_pipeline_environment and sn_pipeline_pipeline records into the global scope if the tables exist.</li>
		<li>AppSanity() now moves any user specific sys_ui_list records into the global scope.</li>
	</ol>


	<h3>1.102.0 - 2024-10-08</h3>
	<ol>
		<li>AppInstall() now disables the business rule "Abort delete on shaerdservice.worker" (introduced in Xanadu) that prevents a specific technical user to be renamed - which clashes with the recommended naming convention for technical users.</li>
		<li>GetInstanceRecordURL() is now marked as deprecated and will produce warning messages if used.</li>
		<li>GetInstanceUrl() now supports a fallback in case the instance is affected by PRB1590051 / DEF0315217.</li>
		<li>GenerateAndSendCredentialsToUser() no longer uses deprecated function GetInstanceURL().</li>
		<li>Added role checks in all relevant functions in DevToolsClientAPI (DEF0313691).</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>UI Action "Save" no longer switches to the record scope if the "x_snc_devtools.ui.force_scope" system property is not set to true.</li>
		<li>The "Baseline Shared App" button when invoked in Studio spawned a new tab and then started the regular baseline procedure (instead of the shared app baseline procedure). This has been fixed.</li> 
		<li>InstallApp() now logs the start and end time in the summary log entry.</li>
	</ol>


	<h3>1.101.0 - 2024-09-10</h3>
	<ol>
		<li>GetCallStack() now contains a workaround to a defect in GlideLog.getStackTrace() which leads to the script include "AjaxRiskUtil" to be added to the call stack for no reason (observed on some Washington instances).</li>
		<li>InstanceScanIsRunning() is now more sensitive regarding remainders of previous incomplete Instance Scans.</li>
		<li>Added table "Shared Application".</li>
		<li>Added functions IsAppShared() and GetSharedApplicationRecord().</li>
		<li>Added "Shared Applications" to the DevTools menu.</li>
		<li>Added UI Action "Go to Shared App Config".</li>
		<li>A new UI Action "Baseline Shared App" is now available to baseline "Shared Applications".</li>
		<li>Function AppVersionBaseline() is now treating "Shared Applications" differently.</li>
		<li>Added function Deprecated() to mark code as deprecated and issue warnings if used.</li>
		<li>Improved the ATF test for InstanceScanCheckOnApp() to make it more resilient and avoid flakyness.</li>
		<li>UI Script functions RedirectToRecord() and RedirectToUrl() now allow to redirect within an iframe.</li> 
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>CreateQRCodeRawData() is now handling exceptions in 3rd party library properly.</li> 
	</ol>


	<h3>1.100.0 - 2024-08-30</h3>
	<ol>
		<li>Vancouver is no longer actively supported.</li>
		<li>SourceControlApplyRemoteChanges(), SourceControlSwitchToBranch(), SourceControlCreateBranch() and SourceControlCommitToCurrentBranch() now uses SetCurrentScope() since otherwise the triggered processes may fail.</li>
		<li>ScriptAutoGenerateDocumentation() now considers if ScriptGetFunctionNames() returns false due to parsing errors.</li>
		<li>A regression prevented the "Save" button to set the global flag on sys_ui_script records. This has been fixed.</li>
		<li>ExecuteBusinessRuleShowCredentialPollution() will only show credential pollution on record forms that are part of a sys_app package.</li>
		<li>The parser failed to process DocumentationAPI which caused the automatic documentation feature to fail on DocumentationAPI. This has been fixed.</li>
		<li>The automatic documentation feature now also works for other scopes than DevTools.</li>
		<li>For unknown reasons the "DevTools" view for the syslog_app_scope table was no longer part of the DevTools scope. This has been fixed.</li>
		<li>AppSanity() now deletes sys_ui_list records (definitions of list layouts) for tables that do not exist.</li>
		<li>AppSanity() now sets the sys_policy for all sys_metadata records of the app to none.</li>
		<li>HtmlRenderPageEvaluatorLog() now enforces the "DevTools" view on the list.</li>
		<li>Added sys_store_app and sys_app_version to the link directory.</li>
	</ol>


	<h3>1.99.0 - 2024-08-22</h3>
	<ol>
		<li>Added function MakeCsv().</li>
		<li>Added function RedirectToUrl().</li>
		<li>Refactored RedirectToRecord() to use RedirectToUrl() and added proper ATF test for RedirectToRecord().</li>
		<li>HttpRequest() now checks the given MID Server for status "Up" - to avoid throwing an exception that cannot be handled.</li>
		<li>Improved IsVaidUrl() to consider single quotes in the get query part as valid.</li>
		<li>Added sys_processor, sys_polaris_menu_config and sys_polaris_configurable_menu_item to the link directory.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
	</ol>


	<h3>1.98.0 - 2024-08-16</h3>
	<ol>
		<li>DevTools is fully tested on Xanadu.</li>
		<li>Added method GitHubAPI::SetMidServer().</li>
		<li>Added method GitLabAPI::SetMidServer().</li>
		<li>Modified RunScriptInScope() and GetCallStack() for Xanadu compatibility.</li>
		<li>Added function IsActive() that verifies if the system property "glide.record.legacy_cross_scope_access_policy_in_script" is set.</li>
		<li>UI Actions and Business Rules now only run if IsActive() returns true.</li>
		<li>HttpRequest() now supports the "method" parameter.</li>
		<li>GetTestRecord() now supports Instance Scan Checks - and hence the "Go To Test" button is available on Scan Check forms.</li>
		<li>Added logic to prevent useless checks on scan_table_check records.</li>		
		<li>Improved layout for examples in HtmlRenderPageGallery().</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>AppSanity() now repairs sys_script records with invalid "null" filter_condition.</li>
		<li>The DevTools view ATF Test Suite form now shows the "name" field.</li>
	</ol>


	<h3>1.97.0 - 2024-07-31</h3>
	<ol>
		<li>Added function GetEncodedQueryToPreventUselessChecks() in the DevTools extention point.</li>
		<li>Added function InstanceScanGetEncodedQueryToPreventUselessChecks() and added logic to prevent useless checks on sys_ui_page records.</li>
		<li>Added function AddScriptTestStep(), added UI Script AddScriptTestStep(), added "Add Script Test Step" UI Action on test step related list.</li>
		<li>AppSanity() now removes repo_url values from non-sys_app dependency records.</li>
		<li>AppSanity() now sets the package_class to sys_app dependency records with empty package_class.</li>
		<li>A recently added pattern in GetEvaluatorErrorExceptionPatterns() caused an invalid url which lead to the evaluator log link to break. This has been fixed.</li>  
	</ol>


	<h3>1.96.0 - 2024-07-29</h3> 
	<ol>
		<li>Added function ScriptAutoGenerateDocumentation().</li>
		<li>Added function IsUserImpersonating().</li>
		<li>Added business rule "sys_script_include - auto documentation" to add auto-generated documentation to a Script Include description.</li>
		<li>Added system property "x_snc_devtools.code.auto_generate_documentation" to control if auto-generated documentation should be added automatically when updating code.</li>
		<li>Added method DocumentationAPI::RenderTables().</li>
		<li>Added method DocumentationAPI::RenderDependencies().</li>
		<li>Added method DocumentationAPI::RenderTechnicalDebts().</li>
		<li>Added UI Script DoModalRunTest().</li>
		<li>Added UI Script DoModalRunTestSuite().</li>
		<li>In the Technical Debt form, the ID is no longer mandatory - as not all technical debts require a switch, the switch field is hidden if the ID is left empty.</li>
		<li>Added UI Action "Run Test Suite" on the Test Suite Result form.</li>
		<li>HttpRequest() now supports MID servers.</li>
		<li>WhatRuns() now also supports UI Actions.</li>
		<li>GetRolesFromUser() now accepts the same variety of values to identify the user like GetUserRecord().</li>
		<li>InstanceScanSuiteOnApp() now properly reports progress information.</li>
		<li>Fixed a defect in InstallerAPI::DictionarySetValue().</li>
		<li>Improved error handling in GitLabAPI::Request(). Unfortunately errors are not reported in a consistent way. The change e.g. avoids an endless loop when identifying branches in a non-existing project.</li>
		<li>Business rule "sys_metadata - prevent useless checks" now only runs in non-interactive sessions.</li>
		<li>Business rule "sys_metadata - prevent useless checks" now checks if the current object is null which prevents evaluator errors in a very strange, not clearly identified corner case.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>The Dependency form now hides the documentation and repository url fields for non custom-apps to avoid the false impression that plugins or store apps can be loaded from a source control repository.</li>
		<li>Test step config "DevTools - Check scoped app sanity" no longer checks for Script Include descriptions as this is well-covered by CodeSanity.</li>
		<li>Test step config "DevTools - Check scoped app sanity" no longer checks for UI Action comments (descriptions) as this is well-covered by CodeSanity.</li>
		<li>Test step config "DevTools - Check scoped app sanity" no longer checks for Properties that are set as is_private as this is fixed automatically in function AppSanity().</li>
		<li>ATF test for InstanceScanCheckScriptOnly() is no longer depending on an OOTB check which avoids false negatives if the OOTB check does not exist.</li>
	</ol>


	<h3>1.95.0 - 2024-07-06</h3>
	<ol>
		<li>Added function GetDetailsFromCredential() for better error handling and error logging in case credentials cannot be loaded.</li>
		<li>Added function RenderCallStack().</li>
		<li>Improved error handling in GetConnectionAndCredentialFromAlias().</li>
		<li>CreateTechnicalUser() did not assign the requested role, instead the admin role was assigned. This has been fixed.</li>
		<li>CreateTechnicalUser() now returns false and deletes the user right away if the requested role could not be assigned.</li>
		<li>Added discovery_credentials, sys_connection and sys_alias to the link directory.</li>
	</ol>


	<h3>1.94.0 - 2024-07-04</h3>
	<ol>
		<li>Added function ConfigurationItemServiceNowAppInsertOrUpdateFromTree().</li>
		<li>Added function ConfigurationItemServiceNowAppInsertOrUpdateFromList().</li>
		<li>Added DevTools view for the CMDB CI ServiceNow App list view.</li>
		<li>The name of a ServiceNow App CI is no longer truncated in list views.</li> 
		<li>ConfigurationItemServiceNowAppInsertOrUpdate() now only adds custom applications (sys_app) to the CMDB.</li>
		<li>GetPseudoSysId() now supports the bRandom parameter to return a random pseudo Sys ID.</li>
		<li>InstallerAPI::DictionarySetValue() now displays a warning if the field "column_label" is set as that may not be sufficient to modify the text displayed in the GUI. The corresponding sys_documentation records (for multiple languages) may have to be set aswell.</li>
		<li>Before baselining the user now has to confirm a message that can be configured via the system property "x_snc_devtools.baseline.message".</li>
	</ol>


	<h3>1.93.0 - 2024-07-03</h3>
	<ol>
		<li>Added method InstallerAPI::DictionaryOverrideSetValue().</li>
		<li>Added method InstallerAPI::SetTableDefaultOrder().</li>
		<li>Added function GetDictionaryOverrideRecord().</li>
		<li>Added function GetBaseTable().</li>
		<li>Added function SetAppInfo().</li>
		<li>Added function MakeUrlParameters().</li>
		<li>Added function GetAppRecordsWithCredentialPollution() and business rules on sys_app and sys_metadata to show a warning if polluted records are found.</li>
		<li>The baseline procedure now checks if there are records with credential pollution and prevents baselining in that case.</li> 
		<li>Added method DocumentationAPI::RenderConnectionAndCredentialAliases().</li>
		<li>All DocumentationAPI::Render*() methods now render a text indicating that there are no records contained in the documented app.</li>
		<li>Added function GetInstanceRecordUrl() as a replacement of the deprecated GetInstanceRecordURL().</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>AppBuilder() now prevents being used on global apps.</li>
	</ol>


	<h3>1.92.0 - 2024-06-29</h3>
	<ol>
		<li>HttpRequest() supports the value "response" as part of its input parameter object to control how the response of the request should be provided. If the response value is set to "RESTResponseV2" the function will return the RESTResponseV2 object if the request did not throw an exception.</li>
		<li>Improved documentation of function HttpRequest().</li>
		<li>Added more logic in business rule "sys_metadata - prevent useless checks" for table sc_cat_item (and derived tables).</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>GetParentRecord() and the "Up" button now support the "syntax_editor_macro" table. GetParentRecord() returns the script include with the exact same name in the same scope if it exists.</li>
	</ol>


	<h3>1.91.0 - 2024-06-21</h3>
	<ol>
		<li>Added function InstanceScanIsScriptCheck().</li>
		<li>Added more logic in business rule "sys_metadata - prevent useless checks" for tables sys_data_source and sys_transform_entry.</li>
		<li>InstanceScanGetCheckFromQuery() now detects variants of Instance Scan queries where "active=true" is not contained - thus enabling queries to load sys_data_source records.</li>
		<li>GetDependencyListFromTree() can now manage the following scenario: Nested missing (more recent version) and non-missing dependency to the same app.</li>
		<li>MaintainGroup() now also updates the additional values on an existing group.</li>
		<li>MakeUserName() now converts all name components to strings to avoid runtime errors.</li>
		<li>RecordTransporterRecordPack() now rejects packing sys_dictionary and sys_dictionary_override records as these may have differing Sys IDs on different instances.</li>
		<li>InstallerAPI::RecordSetValue() now rejects working on sys_dictionary (or derived) and sys_dictionary_override records.</li>
		<li>AppInstall() no longer sets the logging verbosity to "debug".</li>
	</ol>


	<h3>1.90.1 - 2024-06-16</h3>
	<ol>
		<li>Fixed a defect in MaintainGroup() that randomly prevented roles from being assigned to or deleted from the group.</li>
		<li>Added parameter "values" to function MaintainGroup() so that the manager, email and description of the maintained group can also be set.</li>
	</ol>


	<h3>1.90.0 - 2024-06-15</h3>
	<ol>
		<li>Added function GetGroupRecord().</li>
		<li>Added function GetRoleRecord().</li>
		<li>Added function IsPersonaRole().</li>
		<li>Added function MaintainGroup().</li>
		<li>GetTableFromSysId() now also finds credential records in discovery_credentials and sys_connection quickly.</li>
	</ol>


	<h3>1.89.0 - 2024-06-08</h3>
	<ol>
		<li>The previous version (number) was intentionally skipped - as a statement against right wing extremism, racism, fascism and any anti-democratic sentiment.</li>
		<li>Added new CMDB CI class: "ServiceNow App" (x_snc_devtools_cmdb_ci_appl_servicenow).</li>
		<li>Added function ConfigurationItemServiceNowAppInsertOrUpdate().</li>
		<li>Added function ConfigurationItemServiceNowAppInsertOrUpdateLocalApps().</li>
		<li>Added method InstallerAPI::ChoiceInsertOrUpdate().</li>
		<li>Added method InstallerAPI::DiscoverySourceInsertOrUpdate().</li>
		<li>Adding "DevTools" as a discovery source in AppInstall().</li>
		<li>The Dependency View page now also displays the raw data if the logging verbosity is set to "debug".</li>
	</ol>


	<h3>1.87.0 - 2024-06-05</h3>
	<ol>
		<li>Added function InstanceScanCheckScriptOnly().</li>
		<li>Added method TestAPI::TestCase_InstanceScanCheckScriptOnly().</li>
	</ol>


	<h3>1.86.0 - 2024-06-03</h3>
	<ol>
		<li>GitHubAPI::GetBranchesFromRepo() can now handle repositories with more than 100 branches.</li>
		<li>GitLabAPI::GetBranchesFromRepo() can now handle repositories with more than 100 branches.</li>
		<li>Added function StringReplaceMultiple().</li>
		<li>Added function GetDictionaryRecord().</li>
		<li>GetScriptRecord() now returns the GlideRecord object that contains the script from which GetScriptRecord() is called or if nStackLevel is greater than 0, the record that contains the script that contains the code of the corresponding stack level.</li>
		<li>IsTestUser() is now more strict and checks if the User ID (user_name) starts with "test.".</li>
		<li>IsTechnicalUser() is now more strict and checks the exact naming convention from the whitepaper.</li>
		<li>TestDataAPI::CreateUser() now also supports the exact naming convention for technical users.</li>
		<li>The DevTools view for sys_app now contains the "Versions" related list.</li>
		<li>CompareDependencyStatus() now supports all relevant dependency status values.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Added more logic in business rule "sys_metadata - prevent useless checks" for tables catalog_ui_policy and item_option_new.</li>
		<li>AppSanity() now cleans up item_option_new "save_script" fields.</li>
		<li>The ATF test for AppSetRepo() failed if DevTools was not connected to a repository. this has been fixed.</li>
		<li>The ATF test for GetInstanceUrl() now fails if glide.servlet.uri is not configured properly for the instance.</li>
		<li>AppSanity() now uses GetAppRecord() and hence allows more parameter types.</li>
		<li>InstallerAPI::DictionarySetValue() and TableColumnSetAttribute() now use GetDictionaryRecord().</li>
	</ol>


	<h3>1.85.0 - 2024-04-05</h3>
	<ol>
		<li>GetRecord() now also supports parent tables.</li>
	</ol>


	<h3>1.84.0 - 2024-03-31</h3>
	<ol>
		<li>The "Application Overview" page now also displays links to manual pages in global applications.</li>
		<li>The "Version Baseline" button now also checks if there is a proper section in the "Release Notes" in the application manual before the actual baseline process is started.</li>
		<li>AppVersionBaseline() now adds a new section in the manual "Release Notes" section (if it exists).</li>
		<li>Added ArrayIntersection().</li>
		<li>Added function GetAppManualRecord().</li>
		<li>Added function AppVersionBaselineCheckReleaseNotes().</li>
		<li>Added function SetValueIncrement().</li>
		<li>Added UI Script GetTimeNow().</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
	</ol>

	<h3>1.83.0 - 2024-03-08</h3>
	<ol>
		<li>Utah is no longer actively supported.</li>
		<li>DevTools is fully tested in Washington.</li>
		<li>The "Baseline Version" UI Action now really triggers the full-features application baseline procedure!</li> 
		<li>Added link to an application's dependencies to the application overview page.</li>
		<li>On the application overview page, the link to the manual page now loads with the navigation.</li>
		<li>On the application overview page, the current branch now links to the repository.</li>
		<li>The Dependency Tree view now displays the package class name for packages other than custom applications.</li> 
		<li>InstallApp() now checks if any of the packages is not installed and returns an error in that case.</li>
		<li>Added function GetAppUncommittedFiles().</li>
		<li>Added function WaitForWorker().</li>
		<li>Added function SourceControlCommitToCurrentBranch().</li>
		<li>Added function SourceControlCreateBranch().</li>
		<li>Added function SourceControlSwitchToBranch().</li>
		<li>Added function AppVersionBaselineIsRunning().</li>
		<li>Added function GetAppBranches().</li>
		<li>UI Script function GetParameter() is deprecated and replaced by function GetParam().</li>
		<li>Added UI Script function GetCurrentUrl().</li>
		<li>Added method InstallerAPI::DocumentationSetValue() to set values in sys_documentation records.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>The UI Action "Baseline Version" is now only displayed on the application form if the application is linked to source control.</li>
		<li>The UI action "Baseline Version" is only visible if the newly introduced system property "x_snc_devtools.ui.baseline_button" is true.</li>
		<li>Improved ATF for ParseJson().</li>
		<li>The UI Scripts GetInstanceRecordPath(), GetInstanceRecordUri(), GetInstanceNewRecordPath() and GetInstanceNewRecordUri() now support the "params" parameter to supply additonal parameters to the url.</li>
		<li>The UI Script ServerRequest() now detects if the response from the server is null and shows an error message indicating that this may be caused by a server error which may not be logged.</li>
	</ol>
	
	<h3>1.82.0 - 2024-02-29</h3>
	<ol>
		<li>Added function IsPolaris().</li>
		<li>Added UI Script Reload().</li>
		<li>Added UI Script IsFormDirty().</li>
		<li>Added function IsClonedDictionary().</li>
		<li>Added function StringMatchRegEx().</li>
		<li>WhatRuns() now also supports Data Policies.</li>
		<li>InstallApp() now only runs installation scripts (AppInstall) contained in custom applications.</li>
		<li>InstallApp() no longer tries to execute inactive AppInstall() scripts.</li>
		<li>HtmlRenderRoundedBox() is now fully aware of Polaris default and dark themes and U16 color schemes.</li> 
		<li>GetTableFromSysId() now handles sys_documentation records properly.</li>
		<li>GenerateAndSendCredentialsToUser() now returns false if the user record cannot be updated. This is the case if a user without security_admin priviliges tries to generate and send credentials for another security_admin user.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Added better logic to the business rule "sys_metadata - prevent useless checks" to avoid unnecessarily scanning any record in sys_dictionary or any derived table.</li>
		<li>GetParam() now also checks gs.action for parameters.</li>
		<li>Added function GetRecordUri() as a replacement of the deprecated GetInstanceRecordURI().</li>
		<li>Added link to application log to the application overview page.</li>
		<li>Added DevTools view for cmn_map_page.</li>
		<li>Added DevTools view for sys_ui_policy.</li>
	</ol>	
	
	<h3>1.81.0 - 2024-02-06</h3>
	<ol>
		<li>Added function GetAppDefaultTestSuite().</li>
		<li>The application list ui page now also contains the link to the applications' default test suite if it exists.</li>
		<li>Added UI Action "Go to Test Suite" to navigate to an application's default test suite from the application form if the test suite exists.</li>
		<li>Fixed a defect in ScriptRemoveComments() that prevented multiple block comments to be removed properly.</li>
		<li>Improved test cases for ScriptRemoveComments().</li>
		<li>UI Actions "Create User By Email", "Create Technical User" and "Create Test User" sometimes did not show. This has been fixed. The UI Actions are now associated with the sys_user table directly and no longer use current.getRecordClassName() in the condition statement. current.getRecordClassName() returns the class name of the first displayed element in a list view instead of the table being displayed (which is at least questionable behaviour).</li> 
	</ol>	
	
	<h3>1.80.0 - 2024-01-29</h3>
	<ol>
		<li>Added function HtmlRenderPreformatted().</li>
		<li>Added function HtmlRenderTree().</li>
		<li>Added the link to the Studio to the "DevTools Application Overview" page.</li>
		<li>Improved the "Technical Debts" related list on the application form.</li>
		<li>The "DevTools HTML Gallery" page now documents more HtmlRender* functions and is improved.</li>
		<li>HtmlRenderRoundedBox() now considers whether polaris styles are available.</li>
		<li>HtmlRenderValue() now uses the new function HtmlRenderPreformatted() internally and by that making sure that any html text contained in the rendered value is html encoded.</li>
		<li>Improved documentation on troubleshooting when DevTools ATF tests fail.</li>
	</ol>	
	
	<h3>1.79.0 - 2024-01-16</h3>
	<ol>
		<li>Added function StringStripTrailingSlash().</li>
		<li>DevToolsWorkerAPI now supports InstallApp().</li>
		<li>InstallApp() now uses ProgressTrackerAPI to communicate progress and produces a log entry that contains a summary of which scripts ran and if they ran successfully.</li>
		<li>ProgressTrackerAPI detects if the execution context is an ATF test and in that case, does nothing. Reporting an error through the progress tracker may interfere with ATF test execution itself which also uses the progress tracker to communicate progress.</li>
		<li>Clone() now supports the bSortKeys parameter to allow for sorted keys in cloned objects.</li>
		<li>MakeJson() now always produces JSON strings with alphabetically sorted keys.</li>
		<li>RecordTransporterRecordPack() now also produces JSON payloads in transport records with alphabetically sorted keys.</li>
		<li>Improved documentation and syntax editor macro for RecordManageOrder().</li>
		<li>The business rule "sys_metadata - prevent useless checks" now also prevents unnecessary checks on records in tables sys_hub_action_input and sys_hub_action_output.</li> 
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>GetTableFromSysId() now also considers table sys_progress_worker as a priority to find Sys IDs way faster.</li> 
		<li>Added "Multi Factor Authentication" section to the link directory.</li>
	</ol>	
	
	<h3>1.78.2 - 2023-12-14</h3>
	<ol>
		<li>Added Sleep() statements to ATF test "DevTools - sys_metadata - Prevent useless checks" to prevent flakyness.</li>
	</ol>	
	
	<h3>1.78.1 - 2023-12-13</h3>
	<ol>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Fixed a defect in RecordTransporterPackagePackTranslatedText() - the query parameter was not applied properly. This has been fixed.</li>
	</ol>	
	
	<h3>1.78.0 - 2023-12-13</h3>
	<ol>
		<li>RecordTransporterPackagePackTranslatedText() now supports the "query" parameter to limit the sys_translated_text records to be scanned.</li>
		<li>Added the "Description" field to the Record Transporter Package.</li>
	</ol>	
	
	<h3>1.77.0 - 2023-12-06</h3>
	<ol>
		<li>Added function RecordInsertOrUpdate().</li>
		<li>Added function MakeJson().</li>
		<li>Added function GetInstanceUrl() as a replacement for the now deprecated GetInstanceURL().</li>
		<li>ATF test for HttpRequest() now also validates that the instance can query itself.</li> 
		<li>IsValidSysId() now considers the string "Default view" as a valid Sys ID.</li>
		<li>Added sys_language and sys_translated_text to the link directory.</li>
		<li>GetTableFromSysId() now also considers table sys_translated_text as a priority to find Sys IDs way faster.</li> 
		<li>ATF test for GlideRecordAddQuery() would fail if there are existing records in the table. This has been fixed.</li>
	</ol>	
	
	<h3>1.76.0 - 2023-11-29</h3>
	<ol>
		<li>Added function GetDiagnostics().</li>
		<li>CreateTechnicalUser() now also sets a provided role and password.</li>
		<li>GetParentRecord() and the "Up" button now also supports sys_ui_form.</li>
		<li>GetParentRecord() and the "Up" button now also supports sysevent_email_action.</li>
		<li>GetParentRecord() and the "Up" button now also supports sys_ws_query_parameter_map.</li>
		<li>Added sys_notification_category to the link directory.</li>
		<li>Corrected the description of the function GetInstancePipelineName().</li>
		<li>Added missing system properties to the DevTools system property category.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Added macro for AppInstall() boilerplate code.</li>
		<li>AppInstall() now fixes the defective client script "Update Name on Suffix Change" for sys_properties which adds "u_" to a scoped application's system property. The test "DevTools - Installation" verifies the fix.</li>
		<li>Added the DevTools view for sys_notification_category to show all notifications as related lists.</li>
		<li>Added ATF test "DevTools - Create and delete admin user" to verify that an admin user can be created and deleted. Some configurations prevent admin users from being deleted to ensure a minimum amount of admin users are available.</li>
	</ol>	

	<h3>1.75.1 - 2023-11-10</h3>
	<ol>
		<li>Added "navpage.do" to the patterns listed in IsPrimaryRequestUrl(). This resolves a defect that can be observed when the evaluator log error mechanism is active AND the system property "glide.entry.first.page.script" points to a function to be executed to determine the landing page after login.</li>
	</ol>

	
	<h3>1.75.0 - 2023-11-09</h3>
	<ol>
		<li>Added function CreateTestUser().</li>
		<li>Added UI action "Create Test User" on the sys_user table to create new test users. The UI action is only visible if the system property "x_snc_devtools.ui.createtestuser_button" is true (which is false by default).</li>
		<li>Added function IsTestUser().</li>
		<li>Added function InstallerAPI::ActivateNotification().</li>
		<li>HttpRequest() now handles exceptions thrown by RESTMessageV2::execute().</li> 
		<li>Clone() no longer produces the log message "ScopedRhinoObjectWrapper: not a wrappable type: com.glide.script.FieldGlideDescriptor".</li>
		<li>The view rule to enforce the "DevTools" view on sys_app did not work. This has been fixed.</li>
		<li>Removed specific view "DevTools App Log" and "DevTools Debug Log" - both menu items now use the "DevTools" view.</li>
		<li>AppBuilder() now sets the "DevTools" for the "Log" menu item.</li>
		<li>GetAllTables() removes most not needed "sys_" attributes from the result array to reduce memory consumption.</li>
		<li>GetTableFromSysId() now also considers tables scan_result, sys_atf_test_result and sys_atf_test_suite_result as a priority and finds Sys IDs in these tables way faster.</li> 
		<li>AppInstall() now deactivates yet another "Save" UI action to avoid duplicate "Save" buttons.</li>
	</ol>	
	
	<h3>1.74.0 - 2023-10-30</h3>
	<ol>
		<li>The "Save" button now supports setting the global flag on sys_ui_script records directly. No more background script executions are required.</li>
		<li>RenderValue() no longer produces the log message "ScopedRhinoObjectWrapper: not a wrappable type: com.glide.script.FieldGlideDescriptor".</li>
		<li>Added sys_plugns to the link directory.</li>
		<li>Fixed more defect in GetDependencyListFromTree() to cover scenarios where the same dependency shows up more than once in the dependency tree.</li>
		<li>GetDependencyTreeErrorCount() now also considers the status summary.</li>
	</ol>	
	
	<h3>1.73.0 - 2023-10-26</h3>
	<ol>
		<li>Fixed a defect in GetDependencyListFromTree() that caused the dependency status summary to be reported as "ok" in case of nested missing packages.</li>
		<li>Added dependency status "incompatible_version" to CompareDependencyStatus().</li>
		<li>A new business rule prevents duplicate dependencies to be added to an application.</li>
		<li>Menu item "Query Log" no longer filters by log level.</li>
		<li>Improved installation steps order.</li>
	</ol>	
	
	<h3>1.72.0 - 2023-10-22</h3>
	<ol>
		<li>Added view rule to enforce the DevTools view on the sys_app form.</li>
		<li>Added view rule to enforce the DevTools view on the sysauto_script form.</li>
		<li>Added function RecordManageOrder().</li>
		<li>Added function GlideRecordRestoreLocation().</li>
		<li>Added function CreateTechnicalUser().</li>
		<li>Added function GetTableRecord().</li>
		<li>TestAPI::Log() can now render objects and arrays directly.</li>
		<li>RecordSetValue() - and subsequently InstallerAPI::RecordSetValue() - can now work on sys_number records properly.</li>
		<li>Added more urls to IsPrimaryRequestUrl() which have been identified in Vancouver.</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>AppSetDefaults() now sets the logging.verbosity system property to "debug".</li>
		<li>Added UI Script LogError().</li>
		<li>UI Script ServerRequest() now detects the use of the parameter "name" which is not supported since the "name" parameter must contain the function of the client callable script include to be executed.</li>
		<li>The UI action "Generate and Send Credentials" is no longer available for technical users.</li>
		<li>Added UI action "Create Technical User" on the sys_user table to create new technical users. The UI action is only visible if the system property "x_snc_devtools.ui.createtechnicaluser_button" is true (which is false by default).</li>
		<li>DocumentationAPI::RenderDescription() now supports line breaks.</li>
		<li>Improved the DevTools view for the sys_app form, added "Claimed Global App Files" related list.</li>
		<li>Improved the DevTools view for the sysauto_script form.</li>
		<li>WhatRuns() now considers the order of sysrule_view records.</li>
		<li>Added DevTools view for sys_ui_bookmark_group that contains the bookmarks related list.</li>
		<li>Added functionality that allows to create cross-scope sysrule_view records.</li>
	</ol>	
	
	<h3>1.71.0 - 2023-10-06</h3>
	<ol>
		<li>Tokyo is no longer actively supported.</li>
		<li>DevTools is fully tested with Vancouver.</li>
		<li>MakeUserName() now considers test and technical users and builds their names according to the naming convention documented in the whitepaper "A mature development and deployment process".</li>
		<li>UI Script Clone() now also handles arrays.</li>
		<li>GetValue() and UI script GetValue() now supports 10 parameters.</li>
		<li>SetValue() and UI script SetValue() now supports 10 parameters.</li>
		<li>Introduced InstallerAPI::DictionarySetValue() to modify sys_dictionary records.</li> 
		<li>DocumentationAPI constructor now also accepts sys_app records and scope names (like GetAppRecord()).</li>
		<li>GetEvaluatorErrorExceptionPatterns() is now accessible to all scopes.</li>
		<li>Created script macro for GetEvaluatorErrorExceptionPatterns().</li>
		<li>Added more evaluator log exception patterns in GetEvaluatorErrorExceptionPatterns().</li>
		<li>Added ATF test for DocumentationAPI.</li>
	</ol>	
	
	<h3>1.70.0 - 2023-09-27</h3>
	<ol>
		<li>Added function HtmlRenderRedirect().</li>
		<li>Added function InstallerAPI::SetHomePage().</li>
		<li>Added function CompareDependencyStatus().</li>
		<li>Fixed a defect in GetDependencyListFromTree() that led to incorrect dependency status summaries.</li>
		<li>Improved ExecuteBusinessRuleShowRecentEvaluatorErrors() to avoid recursive calls to the "sys_metadata - show evaluator errors" business rule - and littering the script execution debug output.</li>
		<li>Refactored HtmlRenderPageEvaluatorLog() to use the new function HtmlRenderRedirect().</li>
		<li>Improved IsValidUrl() to correctly accept urls that contain round brackets "(" and ")" in the GET query part.</li> 
		<li>The "Installation" ATF test now verifies that glide.caller_class.enabled is NOT to to false as this would prevent various DevTools functions to work properly.</li>
	</ol>	
	
	<h3>1.69.0 - 2023-09-19</h3>
	<ol>
		<li>Added function InstallerAPI::ActivateACL().</li>
		<li>Added more patterns to GetEvaluatorErrorExceptionPatterns().</li>
		<li>Fixed a defect in GetParentRecord().</li>
	</ol>	
	
	<h3>1.68.0 - 2023-09-18</h3>
	<ol>
		<li>Added function GetRecentEvaluatorErrors().</li>
		<li>Added a business rule for sys_metadata to display recent evaluator errors on all screens.</li>  
		<li>Added function IsPrimaryRequestUrl().</li>
		<li>Improved function BusinessRuleGetOperation() to cover the case that the operation() function is not defined in a GlideRecord object.</li> 
		<li>GetParentRecord() and the "Up" button now also supports sp_rectangle_menu_item.</li>
		<li>GetParentRecord() and the "Up" button now also supports sys_user.</li>
		<li>The menu item "Evaluator Log" now uses a UI Page to forward to the filtered and sorted syslog list view so that the exception patterns defined in function GetEvaluatorErrorExceptionPatterns().</li>
	</ol>	
	
	<h3>1.67.0 - 2023-09-03</h3>
	<ol>
		<li>Added UI Script GetInstanceNewRecordUri().</li>
		<li>Added UI Script GetInstanceNewRecordPath().</li>
		<li>Added UI Script GetProperties().</li>
		<li>Added UI Script GetFunctions().</li>
		<li>Added UI Script BindAllFunctionsToThis().</li>
		<li>Added business rule "sys_ux_registry_m2m_category - sort" to sort Workspaces in the menu alphabetically.</li>
		<li>GetRecord() now also accepts a GlideRecord object as the second parameter. If the GlideRecord object represents a record in the given table, the same GlideRecord object is returned.</li>
		<li>GetParentRecord() and the "Up" button now also supports sys_ui_bookmark.</li>
		<li>GetParentRecord() and the "Up" button now also supports sys_atf_test_result_step.</li>
		<li>Fixed a defect in IsValidUrl() which led to some urls not being recognized as valid (e.g. "https://www.example.com/path?").</li>
		<li>Fixed a defect in TestAPI::TestCase_GetValue(). The 6th parameter was not forwarded to the TestCase function correctly. This has been fixed. Thanks to https://github.com/jessems/ for spotting this.</li>
		<li>Improved installation instructions by putting more emphasis on setting the system property to true hat enabled cross scope scripting.</li>
	</ol>	
	
	<h3>1.66.0 - 2023-08-17</h3>
	<ol>
		<li>Added function ProcessEvaluatorErrors() to set the level of Evaluator "Warnings" to "Error" - as it should be!</li>
		<li>Added function HtmlRenderRoundedBox().</li>
		<li>HtmlRenderScript() and HtmlRenderScriptUrl() now support module scripts.</li>
		<li>Technical Debts now have the "Description" field to allow for a more detailed description of the debt.</li>
		<li>Added a message on the sysrule_view form to inform the developer on how to set a table that is defined in a different scope.</li>
		<li>The dependency "Reason" is now displayed in the application form related list.</li>
		<li>GetDependencyListFromTree() now removes the "_dependencies" field.</li>
		<li>GetDependencyListFromTree() now adds the "repo_url" field to all package objects in the "list" array for consistency.</li> 
		<li>AppVersionBaseline() now updates the repository and documentation url fields of applications if possible.</li>
		<li>AppVersionBaseline() now also calls the application's AppBaseline() function if it exists.</li>
		<li>AppVersionBaseline() is now configured to be accessible from all scopes.</li>
		<li>Added chapter on "Baseline Application Version" to the manual.</li>
	</ol>	
	
	<h3>1.65.0 - 2023-07-25</h3>
	<ol>
		<li>Dependencies now contain the "Reason" field to document why the application is required.</li>
		<li>Dependencies now contain the "Package Class" field so that plugins, custom applications and store apps can be recognized.</li>
		<li>Added function GetAppCurrentBranch().</li>
		<li>Application page now shows the current branch in the overview table.</li>
		<li>Added function GetProperties().</li>
		<li>Added function GetFunctions().</li>
		<li>Added function BindAllFunctionsToThis().</li>
		<li>Added function HtmlRenderOrderedList().</li>
		<li>Added function HtmlRenderUnorderedList().</li>
		<li>Added function GetCurrentRecord().</li>
		<li>Added function GetCurrentUrl.</li>
		<li>Added function GetDependencyTreeErrorCount().</li>
		<li>Added ATF for ImageAPI. This marks full formal test coverage.</li>
		<li>GitHubAPI::GetFilesFromBranch() now delivers an array of path names (instead of the objects returned by the GitHub API).</li> 
		<li>GitLabAPI::GetFilesFromBranch() now delivers an array of path names (instead of the objects returned by the GitLab API).</li> 
		<li>GetParentRecord() and the "Up" button now also support cmn_schedule_span.</li>
		<li>Improved ImageAPI by using bind() for GetPixel() and SetPixel() to make sure "this" is resolved properly.</li> 
		<li>Improved syntax editor macro for AppBuilder.</li>
		<li>Improved boilerplate GetPipelineInstanceName() function created by AppBuilder().</li>
		<li>InstanceReset() now deactivates the popup for user consent for usage analytics.</li>
		<li>AppBuilder() created te LogWarning() function using gs.error() instead of gs.warn(). This has been fixed.</li>
		<li>HtmlRenderDependencies() no longer displays the number of dependencies if the package is not installed.</li>
	</ol>	
	
	<h3>1.64.0 - 2023-06-16</h3>
	<ol>
		<li>Added GetDependencyListFromTree() and refactored GetPackageDependencyList() to use it.</li>
		<li>Added UI Script IsValidUrl().</li>
		<li>Added method InstallerAPI::RecordDelete().</li>
		<li>"Global" can no longer be selected as a dependency.</li>
		<li>InstallerAPI::RecordInsertOrUpdate() now supports setting the sys_id for a new record explicitly.</li>
		<li>InstallerAPI functions now consistently logs "No action required" in case there is no action required.</li>
		<li>GetParentRecord() and the "Up" button now also supports item_option_new and sys_schema_attribute_m2m.</li>
		<li>UI Script Log() now uses console.log() since jslog() is no longer supported.</li>
		<li>AppSanity() deleted roles asociated to an ACL erroneously if more than one role is associated to an ACL. This has been fixed.</li>
		<li>AppSanity() eventually deleted valid ACLs for create or delete operations which were not of type "record". This has been fixed.</li>
		<li>AppSanity() now deletes all records in sys_push_notif_app_install associated to the given app.</li>
		<li>AppSanity() now deletes records erroneously created in the application scope due to issues with PA Dashboards documented in KB0814656.</li>
		<li>ParseXml() can now deal with xml encoded line breaks.</li>
	</ol>

	<h3>1.63.0 - 2023-06-02</h3>
	<ol>
		<li>Added function GetVersionFromString().</li>
		<li>Added function GetLength().</li>
		<li>RecordInsert() can now set the Sys ID explicitly.</li>
		<li>GlideRecordSetValue() can now also be used to set the Sys ID if the newRecord() function has been used on the record.</li>
		<li>GitLabAPI::GetFilesFromBranch() now supports branches with more than approx. 100 files.</li>
		<li>GitLabAPI and GitHubAPI now count the number of requests and support the ::GetRequestCount() function to return the count.</li>
		<li>SetAppRepo() now also sets the repo url in the application record and in all dependency records.</li>
		<li>Added ATF test for UpdateSetDelete().</li>
		<li>ScriptGetFunctionNames() now also works outside InstanceScan checks. Additional ATF test cases have been added.</li>
		<li>AppBuilder() now creates LogError() and LogWarning() functions.</li>
		<li>AppBuilder() now creates navigation modules for the application log filtered by scope instead of the message containing the application name.</li>
		<li>Function CreateUserByEmail() now sets the user name to all lower case letters.</li>
		<li>Added section "Create and Send Credentials" to the manual.</li>
	</ol>
	
	<h3>1.62.0 - 2023-05-03</h3>
	<ol>
		<li>Removed deprecated table "x_snc_devtools_technical_dept".</li>
		<li>Renamed function Warning() to LogWarning() for consistency.</li>
		<li>Added function LogError() and PrepareLogError().</li>
		<li>Added function SendMail().</li>
		<li>Added function MakeUserName().</li>
		<li>Added function GenerateAndSendCredentialsToUser().</li>
		<li>Added UI action "Generate and Send Credentials".</li>
		<li>Added system property "x_snc_devtools.ui.generateandsendcredentials_button" which is "false" by default.</li>
		<li>GitLabAPI::SetApiUrl() did not add the trailing slash properly. This has been fixed.</li>
		<li>Added ATF for RecordSaveToUpdateSet().</li>
		<li>Added ATF for InstanceScanCheckOnApp().</li>
	</ol>	
	
	<h3>1.61.0 - 2023-04-26</h3>
	<ol>
		<li>Function GetTechnicalDeptSwitchState() has been named incorrectly and has been renamed to GetTechnicalDebtSwitchState().</li>
		<li>The table "x_snc_devtools_technical_dept" was also named incorrectly. A new table has been created called "x_snc_devtools_technical_debt". The old table will remain until the next release to allow for a transition. Use the following script for data migration:
		<pre>var grDept = new GlideRecord('x_snc_devtools_technical_dept');
grDept.query();
while (grDept.next())
{
    x_snc_devtools.Log(grDept);
    RecordQueryOrInsert('x_snc_devtools_technical_debt',
        {
            sys_scope: grDept.sys_scope,
            id: grDept.id
        },
        {
            short_description: grDept.short_description,
            switch: grDept.switch
        },
        false);
}</pre></li>
		<li>Added macro for GetTechnicalDebtSwitchState().</li>
		<li>Added function TableReparent().</li>
		<li>Added function IsUserMaint().</li>
		<li>Added function CreateUserByEmail().</li>
		<li>Added the "Create User by Email" UI Action.</li>
		<li>Added function ParseEmail().</li>
		<li>Added functions Warning() and PrepareLogWarning().</li>
		<li>Added UI Script IsValidEmail().</li>
		<li>Added UI Script StringCheckRegEx.</li>
		<li>Improved function IsUserHasRoleExactly() and its ATF test to be resilient to a missing role parameter and to check test cases with and without the user parameter.</li>
		<li>Fixed defect in GitHubAPI::SetApiUrl().</li>
		<li>Added function InstanceScanGetCheckFromQuery() and refactored business rule "sys_metadata - prevent useless checks" to contain less code.</li>
		<li>Added ATF for GliderecordAddQuery().</li>
		<li>InstallerAPI now checks if the system property "glide.record.legacy_cross_scope_access_policy_in_script" is set to true before starting the installation.</li>
		<li>Improved ATF test for BusinessRuleGetOperation() which eventually failed as the test business rule scope was not set explicitly.</li> 
	</ol>
	
	<h3>1.60.0 - 2023-04-07</h3>
	<ol>
		<li>San Diego is no longer actively supported.</li>
		<li>Added function SetAppRepo() to set the url of an application repository configuration associated to an application.</li>
		<li>Added function GetInstanceName() to retrieve the instance name.</li>
		<li>Added function GetInstancePipelineName() which maps the real instance name to the pipeline name - if the DevTools extension point function GetInstancePipelineName() is implemented by another application.</li>
		<li>Added functions PrepareLogInfo() and PrepareLogDebug().</li> 
		<li>HtmlRenderTable() now accepts a string containing css styles as its 3rd parameter - and hence is now compatible with the template code in the HtmlRenderTable script macro.</li>
		<li>InstanceReset() hides more (not needed) menu modules.</li>
		<li>StringFormat() was not configured to be accessible from all scopes. This has been fixed.</li>
		<li>InstallerAPI::RecordSetValue() did not check if the installation should be aborted. This has been fixed.</li>
		<li>InstallerAPI::InstallSystemPropertyCategoryMapping() now sets the scope of the category to the category mapping.</li>
		<li>The template code in script editor macro TestAPI has been simplified.</li>
		<li>Improved navigation modules in section "Debug".</li>
		<li>Moved the "Applications" navigation module to the top.</li>
		<li>Added ATF for HtmlRenderQRCode().</li>
		<li>Added ATF for BusinessRuleGetOperation().</li>
		<li>Added ATF for InstanceScanGetScanResults().</li>
		<li>Added ATF for TableColumnSetAttribute().</li>
		<li>Added ATF for AppBuilderAddTestToSuite().</li>
	</ol>
	
	<h3>1.59.0 - 2023-03-22</h3>
	<ol>
		<li>DevTools is fully tested in Utah.</li>
		<li>Added function InstallerAPI::ActivateViewRule().</li>
		<li>AppInstall() now deactivates the "GlobalApp" view rule on global scoped application forms to allow the "DevTools" view to be used.</li> 
		<li>The test step configs "DevTools - Check app dependencies" and "DevTools - Check scoped app sanity" no longer require to specify the application - it will test the application in which the test step (and the test) is contained - which is the main use case.</li>
		<li>Fixed an issue in the technical debt management documentation code snippet.</li>
		<li>InstanceReset() hides more menus.</li>
		<li>Added test for GetFormatConfig().</li>
		<li>Added test for GetFormatConfigMultiple().</li>
		<li>Added test for GetLinkDirectory().</li>
		<li>Added test for AppVersionBaseline().</li>
	</ol>	
	
	<h3>1.58.0 - 2023-03-14</h3>
	<ol>
		<li>Added function StringFormat().</li>
		<li>Added function ParseXml().</li>
		<li>Added function Base64Decode().</li>
		<li>Added function Base64Encode().</li>
		<li>Added function InstallerAPI::InsertFieldToFormSection() and updated AppInstall() accordingly.</li>
		<li>AppBuilder() no longer creates code to set the removed log.active property in AppSetDefaults().</li>
		<li>The Dependency Viewer now keeps hiding packages when using the tab navigation.</li>
		<li>Improved links in DocumentationAPI functions and in the manual.</li>
		<li>GetCleanAppName() now also trims the name to avoid leading or trailing whitespaces.</li>
		<li>Added ATF for HtmlRenderWhatRuns().</li>
		<li>Added ATF for GetCurrentScope().</li>
		<li>Added ATF for IsGhostRequiredForRecordUpdate().</li>
	</ol>	
	
	<h3>1.57.0 - 2023-03-09</h3>
	<ol>
		<li>Introduced technical debt management and the GetTechnicalDeptSwitchState() function (yes, including the typo error in the function name).</li>
		<li>Added function DocumentationAPI::RenderDescription().</li>
		<li>Added function GetMinimalCommonVersion().</li>
		<li>The Script Include and the UI Script functions GetValue() now also supports arrays as the vKey1 parameter.</li>
		<li>AddSanity() now deletes sys_atf_schedule records left behind by ATF triggered Test Suite executions.</li>
		<li>The UI Action "Save" now supports active scope switching.</li>
		<li>AppBuilder() no longer creates the log.active property and the generated Log() function no longer checks the property.</li>
		<li>The Dependency Viewer and the GetDependencyList() functions now consider incompatible version requirements for the same package from different packages.</li>
		<li>Improved rendering in the Dependency Viewer in HtmlRenderDependencies(): Dependency count is no longer displayed for circular dependencies.</li>
		<li>The Dependency Viewer page now supports the parameter hide by which a comma separated list of Sys Ids can be provided of packages that should be HIDDEN in the tree view.</li>
		<li>Added function TestAPI::TestCase_GetValue() and refactored the ATF test for GetValue().</li>
		<li>Refactored the ATF test for function IsProperty().</li>
		<li>Added sys_trigger and scan_suite_execution to the link directory.</li>
		<li>Added ATF for HtmlRenderLinkDirectory().</li>
		<li>Added ATF for ProgressTrackerAPI.</li>
	</ol>
	
	<h3>1.56.0 - 2023-02-24</h3>
	<ol>
		<li>Removed the system property "x_snc_devtools.debug.log" is it was redundant to the system property "x_snc_devtools.logging.verbosity".</li> 
		<li>Added function InstanceScanSuiteOnAppWithDependencies() to perform an Instance Scan on an application and all of its dependencies (only custom applications).</li> 
		<li>Added function TableColumnSetAttribute() and InstallerAPI::SetTableColumnAttribute().</li>
		<li>Added function TestAPI::TestCase_HttpRequest().</li>
		<li>Added function IsFunction().</li>
		<li>TestDataAPI::CreateUser() now supports setting a password.</li>
		<li>Function HttpRequest() now supports basic auth.</li>
		<li>Function WhatRuns() now also considers "async_always" business rules.</li>
		<li>AppSanity() now also sets async_always for (deprecated) async business rules (https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0951770).</li>
		<li>AppSanity() now fixes the sys_scope vs. sys_package discrepancy in sys_metadata records.</li> 
		<li>Added business rule "sys_metadata - sync sys_package" to sync the sys_package value to the sys_scope values.</li>
		<li>AppVersionBaseline() now works properly with global scoped applications.</li>
		<li>When running the installation scripts from the ui action "Run Install Scripts" some operations fail for unknown reasosns. Hence the ui action now only shows a message with instructions to use a background script.</li> 
		<li>The DevTools Dependencies Viewer now shows the total count of packages in the list mode.</li>
		<li>AppInstall() now sets the OOTB ui action ""Import Update Set from XML" to be a list banner button.</li>
		<li>AppInstall() now adds the field "Description" to the business rule form.</li>
		<li>Added DocumentationAPI::RenderRestApis() to show information of available REST APIs.</li>
		<li>DocumentationAPI::RenderBusinessRules() now also displays the description of a business rule (if it exists).</li>
		<li>Added more ATF test cases for GetPackageDependencyList().</li>
		<li>InstanceScanSuiteOnApp() now also accepts different parameter types to specify the app (same as GetAppRecord).</li> 
		<li>GetType() can now deal with objects that return null.</li>
		<li>Functions RenderValue() and Clone() can now deal with objects that do not have a default value (like "wiki" GlideElement fields as used in kb_knowledge).</li>
		<li>AppBuilder() no longer adds the call to x_snc_devtools.AppInstall() in the AppInstall() function - dependency installation should be handled via InstallApp().</li>
		<li>Function AppBuilderAddSyntaxEditorMacro() is now available for all scopes. Added ATF test and syntax edit macro for the function. Added more robust parameter validation.</li>
		<li>Function GetPackageDependencyList() now also includes circular dependency packages. And the Dependency Viewer shows the circular dependencies in the "List" view.</li>
		<li>Function InstallApp() now returns false of circular dependencies are detected.</li>
		<li>Function InstallApp() now supports the bStopOnError parameter which controls if the installation should stop after the first AppInstall() functions returns false.</li>
		<li>Refactored the ATF test for RenderValue() to use TestAPI.</li>
		<li>UI Action "Find Sys Id" now trims the input which makes it more convenient to copy and paste Sys Ids into the modal dialog.</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" no longer checks if the run_as user associated to a sysauto_script is a technical user or the default admin. When running an ATF test suite via REST API call, a temporary scheduled job is created and associated with the user that triggered the REST API call. This causes the test to fail.</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" no longer checks if the short_description of a sys_app is populated as this is covered by a CodeSanity check.</li>
		<li>Added sys_ws_query_parameter to the link directory.</li>
		<li>GetParentRecord() and the "Up" button now also supports sys_ws_query_parameter.</li>
	</ol>	
	
	<h3>1.55.0 - 2023-02-05</h3>
	<ol>
		<li>Added function InstallApp() to execute an application's and all of its dependencies' AppInstall() functions.</li> 
		<li>Added UI Action "Run Install Scripts" on the sys_app form to execute InstallApp() for the current application.</li>
		<li>InstallerAPI::Finish() now returns true or false dependening on whether the installation activities were all successful.</li>
		<li>DocumentationAPI::RenderInstallationInstructionsAppInstall() now refers to the InstallApp() function to run an app's and it's dependencies' AppInstall() functions.</li>
		<li>Function TableSetAttribute() does not attempt to change the attributes if the attribute value is already set to the intended value and returns true.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now also considers system properties defining the activity fields of a table.</li>
		<li>Added ATF for RedirectToRecord() - however without actually testing the function as no scripted method has been identified yet.</li>
		<li>Added ATF for InstanceReset() to verify it is NOT running if no valid safety token is provided.</li>
	</ol>

	<h3>1.54.0 - 2023-01-25</h3>
	<ol>
		<li>Added function IsDerivedFromTable().</li>
		<li>Added function GetRecordScopeSysId().</li>
		<li>Function InstanceScanSuiteOnRecord() is now accessible from all scopes and added ATF test.</li>
		<li>DevToolsWorkerAPI now supports InstanceScanSuiteOnRecord().</li>
		<li>Function StartWorker() now verifies that the given script include is a valid script include api name and added an ATF test for StartWorker().</li>
		<li>Added business rule "sys_metadata - Prevent useless checks".</li>
		<li>The business rule "sys_flow_context - Set domain" now sets the global domain for flows that are configured to run as system.</li>
		<li>The Dependency Viewer "Dependency List" displayed a dependency count of 0 for each package. This has been fixed.</li>
		<li>Added table sys_progress_worker to the link directory.</li>
		<li>Added ATF for function RenderRecordExecutionSchedule().</li>
		<li>Added chapter "Dependency Management" to the manual.</li>
	</ol>
	
	
	<h3>1.53.0 - 2023-01-17</h3>
	<ol>
		<li>Added "list" mode to the "DevTools Dependency Viewer" page.</li>
		<li>Added function GetPackageDependencyList().</li>
		<li>Added function HtmlRenderPageGallery().</li>
		<li>Added UI script GetFloatValue().</li>
		<li>Added UI script GetRandomFloat().</li>
		<li>Added UI script GetRandomInteger().</li>
		<li>Added UI script GetRandomBoolean().</li>
		<li>Function RenderRecordSummary() now also considers sys_name.</li>
	</ol>	
	
	<h3>1.52.0 - 2023-01-04</h3>
	<ol>
		<li>Added function IsValidUrl().</li>
		<li>Added function RenderArray().</li>
		<li>Added function RenderDebugDump().</li>
		<li>The DevTools extension point class now supports the function DevToolsRenderDebugDump() to extend the function RenderDebugDump() so that other applications can contribute additional debug information.</li>
		<li>DocumentationAPI::RenderSystemRequirements() now renders the compatible versions of dependencies properly.</li>
		<li>Added ATF for CacheFlushMenu() - but yet without any reasonable checks for success.</li>
		<li>Added ATF for HtmlRenderInfo().</li>
	</ol>	
	
	<h3>1.51.0 - 2022-12-23</h3>
	<ol>
		<li>Added page "DevTools Application Overview" and functions GetApplicationStatus() and HtmlRenderPageApplications().</li>
		<li>The DevTools extension point class now supports the function DevToolsGetApplicationStatus() to extend the "DevTools Application Overview" page with additional information.</li>
		<li>Added function IsValidEmail().</li>
		<li>Function HtmlRenderLink() can now render email links.</li>
		<li>Function HtmlRenderTable() now considers horizontal alignment ('left' or 'right') per cell.</li>
		<li>Fixed a defect in GetPackageDependencyTree() that prevented circular dependencies to be handled properly.</li>
		<li>Improved layout for the DevTools - Dependency Viewer.</li>
		<li>Added ATF test for HtmlRenderPageGallery().</li>
	</ol>
	
	<h3>1.50.0 - 2022-12-20</h3>
	<ol>
		<li>Added function GetPackageRecord().</li>
		<li>Added function GetPackageDependencyTree().</li>
		<li>Added function CompareVersion().</li>
		<li>Function GetPackageVersion() now uses GetPackageRecord() which allows more flexibility on how to specify the package.</li>
		<li>GetParentRecord() and the "Up" button now also supports sys_package_dependency_m2m and atf_input_variable.</li>
		<li>InstanceReset() now also deactivates the "Copy Test Suite" button.</li>
		<li>Added table x_snc_devtools_dependency as a better way to manage dependencies than sys_package_dependency_m2m.</li>
		<li>Added business rule for x_snc_devtools_dependency to keep various fields in sync.</li>
		<li>Added function SyncDependency().</li>
		<li>Added function HtmlRenderDependencies().</li>
		<li>Added ui page "DevTools - Dependency Viewer" to display all dependencies of a given package.</li>
		<li>DocumentationAPI::RenderSystemRequirements() now considers the field x_snc_Devtools_documentation_url as a fallback to render the link to the app.</li>
		<li>Function AppBuilder() now also creates a dependency record for "DevTools" within the application to be built.</li>
		<li>Function GetAppRecord() now actually returns a sys_app record (with all its fields) instead of a sys_scope record.</li>
		<li>Added test case for GetValue() to show that it works with GlideRecord objects.</li>
		<li>Renamed test step configuration "DevTools - Check scoped app dependency" to "DevTools - Check app dependency" since it works with global scoped apps aswell.</li>
		<li>Added test step configuration "DevTools - Check app dependencies" to check all deocumented dependencies of the given application.</li>
		<li>Added ATF test for HtmlRenderError().</li>
	</ol>	
	
	<h3>1.49.0 - 2022-12-05</h3>
	<ol>
		<li>Added function InstanceScanCheckOnRecord() to check a single record against a single Instance Scan check.</li>
		<li>TestAPI now uses InstanceScanCheckOnRecord() which significantly accelerates test cases for Instance Scan checks.</li> 
		<li>Added function InstanceScanIsRunning().</li>
		<li>TestAPI now uses InstanceScanIsRunning() to check if an Instance Scan test case can be executed right now and fails the test if not.</li>  
		<li>Added UI script InstanceScanIsRunning().</li>
		<li>Added DevToolsClientAPI::InstanceScanIsRunning().</li>
		<li>Added function GetTestRecord() and IsTestAvailableForRecord().</li>
		<li>Added DevToolsClientAPI::GetTestRecord().</li>
		<li>Added Ui action "Go to Test" to navigate from a Script Include to a matching ATF test.</li>
		<li>Fixed a defect in UI script GetKeys() that caused an error if an undefined input value was provided.</li>
		<li>Added ATF test for HtmlRenderWarning().</li>
		<li>Added ATF test for IsDomainSeparationInstalled().</li>
		<li>Added ATF test for IsTableDomainSeparated().</li>
		<li>Added ATF test for IsRecordRunTestButtonCompatible().</li>
		<li>Improved the "AppBuilder" script macro.</li>
		<li>Module "Evaluator Log" now shows all entries as of the current day.</li>
	</ol>	
	
	<h3>1.48.0 - 2022-11-30</h3>
	<ol>
		<li>Added function IsTestRunning() and added required logic to TestAPI.</li>
		<li>Added UI script function IsFunction().</li>
		<li>Function InstanceScanSuiteOnApp() now sets the user that actually triggered the scan in the result record (instead of the technical user that is used to trigger the REST API call).</li> 
		<li>UI script function DoModalProgress() now also supports callbacks for the case the process could not be started and for status updates.</li>
		<li>Added ATF test for function HtmlRenderScriptUrl().</li>
	</ol>	

	<h3>1.47.0 - 2022-11-28</h3>
	<ol>
		<li>Added function StringReplaceRegEx().</li>
		<li>Added function ScriptEmptyStringLiterals().</li>
		<li>Added function ScriptRemoveComments().</li>
		<li>Added function InstanceScanSuiteOnApp().</li>
		<li>Added function InstanceScanSuiteOnApp() to the DevToolsClientAPI class.</li>
		<li>Added function GetCurrentScope().</li>
		<li>Added class ProgressTrackerAPI (which does not yet work properly).</li>
		<li>Added class DevToolsWorkerAPI to contain proxy lengthy process functions that can be executed through a progress worker.</li> 
		<li>Added UI script function GetParameter().</li>
		<li>Added UI script function RedirectToUrl().</li>
		<li>Added UI script function RedirectToRecord().</li>
		<li>Added UI script function GetInstanceRecordUri().</li>
		<li>Added UI script function GetInstanceRecordPath().</li>
		<li>Added UI script function GetElementById().</li>
		<li>The function InstanceScanGetScanResults() now reflects the given result record Sys ID in the result object.</li> 
		<li>Added business rule on sys_app to set the user's current scope to the scope of the app that is displayed.</li>
		<li>Added business rule on sys_app to set the repo url to the currently configured repo url (if it exists and no repo url has been set in the app yet).</li>
		<li>The current scope is now automatically set to the scope of the system properties category when a user navigates to the system_properties_ui page.</li> 
		<li>The UI action "Find Sys ID" now opens a new tab.</li>
		<li>Added the version column in the DevTools view for table sys_app.</li>
		<li>The menu module "Applications" now links to the sys_app table.</li>
		<li>Added menu module "UI Scripts".</li>
		<li>Added "DevTools" views for Script Includes and UI Scripts.</li>
		<li>Added "System Log" to the menu.</li>
		<li>Added table sys_execution_tracker to the link directory.</li>
		<li>Added ATF for function Sleep().</li>
		<li>Added ATF for function HtmlRenderScript().</li>
		<li>Removed not needed debug log output from various UI scripts.</li>
	</ol>

	
	<h3>1.46.0 - 2022-11-14</h3>
	<ol>
		<li>Tokyo is now supported.</li>
		<li>Added function IsInteger().</li>
		<li>Added function HtmlRenderTable().</li>
		<li>Added function HtmlRenderStyle().</li>
		<li>Added function RenderRecordExecutionSchedule().</li>
		<li>Added function DocumentationAPI::RenderScheduledJobs().</li>
		<li>Added UI script function IsInteger().</li>
		<li>Fixed a bug in TableSetAttribute() which may have caused the wrong dictionary record to be changed.</li>
		<li>Function and UI script function SetValue() can now handle arrays, too.</li>
		<li>ATF test step configuration "DevTools - Check scoped app dependency" now strips whitespaces from the version list.</li>
		<li>ATF test "DevTools - GetAllTables" now produces less output to not run into memory issues.</li>
		<li>Removed Rome support from the manual UI page template.</li>
		<li>Added DevTools website url to the manual UI page template.</li>
		<li>UI action "Baseline" - i.e. the function AppVersionBaseline() - is now also executing the AppSanity() function for the app.</li>
		<li>AppBuilder() now adds x_snc_devtools.AppInstall() to the created AppInstall() function to show how apps can also install their dependencies.</li>
	</ol>	
	
	<h3>1.45.0 - 2022-11-01</h3>
	<ol>
		<li>Added function GetAllTables() to get details on all tables (including their extension hierarchy if requested).</li>
		<li>Added function DevToolsClientAPI::GetAllTables() so that GetAllTables() can be called from the client.</li>
		<li>Added function IsCamelCase() to check if a string is "camelCase".</li>
		<li>Added function IsKebabCase() to check if a string is "kebab-case".</li>
		<li>Added function IsSnakeCase() to check if a string is "snake_case".</li>
		<li>Added function GetCleanAppName() to strip postfixes from an application name based on the given string and refactored GetAppName() to use the new function.</li>
		<li>Added function GetInstanceListURL().</li>
		<li>Added function ScriptGetFunctionNames() to get a list of all functions contained in a script (represented by a linter scan check engine object).</li> 
		<li>Added business rule "sys_flow_context - Set domain" to fix the issue described in&#160;<a href="https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0998966" target="_blank">KB0998966</a>.</li>
		<li>Function GetAppRecord() can now also get the app record by the (clean) name of the app.</li> 
		<li>Function GetAppRecord() can now also be used to get store apps, since it now queries the sys_scope table (instead of sys_app).</li>
		<li>Function GetAppScope() now uses GetAppRecord() internally and hence can return the scope name based on an app's Sys ID, name, scope name or an existing record object.</li>
		<li>Function RenderRecordSummary() now also considers the title column.</li> 
		<li>Function DocumentationAPI::RenderInstallationInstructionsImportFromSourceControl() now also renders a link to the application's installation instructions if required.</li>
		<li>Added "List" and "All Configurations" links to the WhatRuns page.</li>
		<li>Added the "Maintainer", "Maintainer Email", "Documentation (url)" and "Repository (url)" fields on sys_app.</li>
		<li>Added the DevTools view for sys_app to only show essential fields and the new fields to document the maintainer, documentation and repo urls.</li>
		<li>Fixed a bug in client function ServerRequest().</li>
		<li>Fixed a bug in function RecordSetValue() that prevented the ghost parameter to work properly.</li>
		<li>GetParentRecord() and the "Up" UI action now support records in sys_atf_test_suite_test and return the related sys_atf_test_suite record.</li>
		<li>The application system property x_snc_devtools.ui.force_scope can now be used to control if the user's current scope should be forced to the record scope when loading a form.</li> 
		<li>Enforcing the DevTools view on the content_css form and make sure only the correct fields are displayed.</li>
		<li>Added tables sys_scope, sys_app, sys_metadata, sys_number and sys_number_counter to the link directory.</li> 
		<li>Added tables sc_catalog, sc_cat_item and sc_category to the link directory.</li>
		<li>Added table sys_ui_form to the link directory.</li>
		<li>Added new section on cross-scope scripting in the manual.</li>
	</ol>	
	
	<h3>1.44.0 - 2022-09-18</h3>
	<ol>
		<li>Added function HtmlRenderScriptUrl().</li>
		<li>Added function HtmlRenderWarning().</li>
		<li>Added function HtmlRenderInfo().</li>
		<li>The message rendered by HtmlRenderError() now looks like the usual ServiceNow error message.</li>
	</ol>	
	
	<h3>1.43.0 - 2022-09-17</h3>
	<ol>
		<li>Added function GetVariablesFromRecord().</li>
		<li>Added function SetCurrentScope().</li>
		<li>Added function HtmlRenderError().</li>
		<li>Added function HtmlRenderScript().</li>
		<li>Added function IsPascalCase().</li>
		<li>Added function DocumentationAPI::RenderEditorMacros().</li>
		<li>Function GetTableFromSysId() is now public and hence added to the manual.</li>
		<li>Function GetPseudoSysId() is now public and hence added to the manual.</li>
		<li>Function GlideRecordAddQuery() is now public and hence added to the manual.</li>
		<li>Added UI script function DoModalMessage() to display a message in a modal dialog.</li>
		<li>Added UI script function DoModalConfirm() to ask the user for confirmation using a modal dialog.</li>
		<li>Added UI script function DoModalPrompt() to ask the user for a text input using a modal dialog.</li>
		<li>Added UI script function GetGlideDialogClass().</li>
		<li>Added UI script function HtmlEncode().</li>
		<li>Added a widget dependency and JS includes to use the DoModal* functions in portal widgets.</li>
		<li>Added table sys_ui_action_view to the link directory.</li>
		<li>Added tables sys_ws_definition and sys_ws_operation to the link directory.</li>
		<li>Added tables sc_item_option and sc_item_option_mtom to the link directory.</li>
		<li>Added business rule on sys_metadata to set the user's current scope to the scope of the record that is displayed.</li> 
		<li>The "Save" UI action is now aware of the limitations to define a UI Action View (rule) in one scope referring to a UI Action from a different scope and displays the background script workaround.</li> 
		<li>GetParentRecord() and the "Up" UI action now support records in sys_ui_action_view and return the related sys_ui_action record.</li>
		<li>GetParentRecord() and the "Up" UI action now support records in sc_item_option and sc_item_option_mtom and return the related records.</li>
		<li>GetParentRecord() and the "Up" UI action now support records in sys_ws_operation and returns the sys_ws_definition record.</li>
		<li>Added macro for AppBuilder().</li>
	</ol>	
	
	<h3>1.42.0 - 2022-08-11</h3>
	<ol>
		<li>Added UI action "Parent Table" to navigate from a list view to the parent table list view (if the table has a parent).</li> 
		<li>Added function StringFindMultiple() to get all the indexes of all occurences of a needle string in a haystack string.</li>
		<li>Added function GetStackTrace() to get the raw stack trace as a string.</li>
		<li>Added function GetCallStack() to get the call stack in a structured format.</li>
		<li>Added function GetScriptRecord() to get the record that contains the script from which GetScriptRecord() is called.</li>
		<li>TestAPI::TestCase_InstanceScanCheck() now outputs the record summary for the test case.</li>
		<li>RenderValue() now supports the bCompactOutput parameter which uses RenderRecordSummary() for GlideRecord objects.</li>
		<li>GetParentRecord() and subsequently the "Up" UI action now support records in derived tables.</li>
		<li>GetParentRecord() now supports records in sys_metadata and returns the scope/app record.</li>
		<li>TestAPI::TestCase() now supports the bCompactOutput parameter which uses RenderRecordSummary() for GlideRecord objects.</li>
		<li>RenderRecordSummary() shows the api_name for sys_script_include records.</li>
		<li>Added UI script functions IsForm() and IsList().</li>
		<li>Added UI script functions GetCurrentRecordTableName() and GetCurrentRecordSysId().</li>
		<li>Added sys_ux_theme and cmn_cost_center tables to the link directory.</li>
		<li>Debug output is now prefixed by "DEBUG". The "Debug Log" module now ONLY shows debug output.</li>
	</ol>
	
	
	<h3>1.41.0 - 2022-07-19</h3>
	<ol>
		<li>Added function RecordSaveToUpdateSet() and updated the UI action "Baseline version" to make use of it.</li>
		<li>Added function GetPseudoSysId() to get a VERY unlikely but valid Sys Id for testing purposes.</li> 
		<li>Added table db_image, sys_ux_client_script, sys_ux_client_script_include to the link directory.</li>
		<li>Added tables from package "Product Inventory Advanced" to the link directory.</li>
		<li>ATF test "DevTools - HtmlRenderImage" is now using an image that is shipped with the DevTools application.</li>
	</ol>
	
	<h3>1.40.0 - 2022-07-07</h3>
	<ol>
		<li>RedirectToRecord() now supports the view parameter.</li>
		<li>Added UI action "Show Table Dictionary Record".</li>
		<li>Added UI action "Baseline Version" to support the baseline of an application version.</li>
		<li>UI action "Save" now maintains the current view.</li>
		<li>UI action "Up" now maintains the current view.</li>
		<li>UI action "List" maintains the current view.</li>
		<li>GetParentRecord() now supports cmn_location, sys_ui_related_list and sys_ui_related_list_entry.</li>
		<li>TestDataAPI now supports Service Portal widgets.</li>
		<li>Added sp_page and sp_widget to the link directory.</li>
	</ol>

	<h3>1.39.0 - 2022-06-11</h3>
	<ol>
		<li>Added function GetParam() to get a url parameter in different contexts.</li>
		<li>Added function HtmlRenderImage() to render an image stored in db_image into an html document.</li>
		<li>Added function GetScopeSysIdFromPropertyName() to identify the scope of a system property based on its name - no matter if the property actually exists or not.</li>
		<li>Added function GetInstanceListURI() to return a list view uri for a given table.</li>
		<li>Added function InstanceScanPointScan() to run a synchronous point scan on a record.</li> 
		<li>Added function InstanceScanGetScanResults() to return the results of an instance scan in a single object.</li>
		<li>Added UI action "Show Choices" to show the choices associated to a table.</li>
		<li>SetProperty() and InstallerAPI::SetProperty() are now using GetScopeSysIdFromPropertyName() to identify the right scope when creating a system property.</li>
		<li>Added function TestAPI::TestCase_InstanceScanCheck().</li>
		<li>TestDataAPI now supports script includes.</li>
		<li>AppInstall() now makes the field class "Related Tags" visible.</li>
		<li>AppBuilder() now creates the system property "logging.verbosity" for the application and the created AppSetDefaults() functions sets the property to "info" by default.</li>
		<li>The "Save" UI action no longer shows on the "Many to Many Definition" form.</li>
		<li>GetParentRecord() can now properly handle sys_choice records that refer to sys_dictionary entries of a parent table.</li>
		<li>The manual template no longer contains Quebec as a supported platform version.</li>
		<li>Added table sys_filter_option_dynamic to the link directory.</li>
		<li>Added tables label and label_entry to the link directory.</li>
	</ol>


	<h3>1.38.0 - 2022-05-31</h3>
	<ol>
		<li>Quebec is no longer actively supported.</li>
		<li>Added function InstanceReset() to remove questionable OOTB features. Handle with care!</li>
		<li>Added function CacheFlushMenu() to update the navigation menu.</li>
		<li>Added function StringFind() to encapsulate .indexOf and correct its faulty behavior with empty strings.</li>
		<li>Added function StringFindRegEx() to search for a string using a regular expression.</li>
		<li>Added function IsUserDefaultAdmin() to check a given sys_id against the OOTB default admin user sys_id.</li>
		<li>Added UI script function GetBoolValue().</li>
		<li>Added UI script function RenderValue().</li>
		<li>Added UI script function StringRemoveCharacters().</li>
		<li>Added UI script function ParseUrl().</li>
		<li>Added UI script function ParseUrlParameters().</li>
		<li>WhatRuns() now supports flows which are triggered on insert or update a record in the given table.</li>
		<li>GetAppName() is now using GetAppRecord() internally and hence accepts both the Sys ID and the scope name as input.</li>
		<li>InstallerAPI class now accepts a paramter to specify a context string used in log output.</li>
		<li>InstallerAPI now flushes the menu cache after installation.</li>
		<li>Added InstallerAPI::ActivateServicePortal() to control if a given Service Portal should be accessible.</li>
		<li>Added InstallerAPI::ActivateModule() to control if a given menu Module should be visible.</li>
		<li>Added InstallerAPI::ActivateAppMenu() to control if a given Application Menu should be visible.</li>
		<li>Added InstallerAPI::RecordSetValue() to set a single field in a given record to a new value.</li>
		<li>InstallerAPI::SetTableAttribute() now respects that an installation is aborted.</li>
		<li>AppBuilder() now uses the new context parameter of InstallAPI when creating the AppInstall() function script include.</li> 
		<li>Clone() is now explicitly considering arrays - this addition was necessary due to a bug in the ServiceNow Javascript engine where arrays are unintendedly stored as references in objects.</li>
		<li>UI script ServerRequest is now properly returning false as a result of the callback function.</li>
		<li>Added Flow Designer tables sys_hub_flow and sys_flow_trigger to the link directory.</li>
		<li>Added tables pa_dashboards, pa_tabs, pa_dimensions and sys_ux_data_broker to the link directory.</li>
		<li>Added an ATF test for InstallerAPI.</li>
	</ol>
	
	<h3>1.37.0 - 2022-04-19</h3> 
	<ol>
		<li>Added function GetCountryRecord().</li>
		<li>Added function StringCheckRegEx().</li>
		<li>Added UI script function GetIntegerValue().</li>
		<li>GetParentRecord() and the "Up" UI action now support records related to the Release Management plugin.</li>
		<li>Added Release Management related tables to the link directory.</li>
		<li>Added tables sys_ui_policy, sysrule_view to the link directory.</li>
		<li>WhatRuns() now supports view rules.</li>
		<li>AppBuilder() now sets the order for the manual ui page correctly behind the menu separator.</li>
		<li>AppInstall() now disables the specific "Save" UI action on table rm_story if it exists to avoid duplicate buttons.</li> 
		<li>DocumentationAPI::RenderInstallationInstructionsImportFromSourceControl() now supports the additional parameter bAdditionalSteps to control if the reader should be advised to perform additional steps during installation that are documented for the given app.</li>
	</ol>
	
	<h3>1.36.0 - 2022-04-08</h3>
	<ol>
		<li>San Diego is now supported.</li>
		<li>Added function CreateQRCodeRawData() to generate the raw data for a QRCode.</li>
		<li>Added function WhatRuns() to identify which business rules run on a table for the different CRUD operations - currently supporting insert, update and query. A corresponding UI action has also been added on forms and lists.</li>
		<li>Added function HtmlRenderQRCode() to render a QR code as plain vanilla html.</li>
		<li>Added the ImageAPI class to craft wonderful images and render them as plain html code or bmp files.</li>
		<li>Added function GetAppRecord() to get a record object of an app either by its Sys ID or its scope name.</li> 
		<li>Added function HtmlRenderValue() to output any value into an html document.</li>
		<li>Added function RenderValueHex() to render a value as an hexadecimal string.</li>
		<li>Added function StringReplace() to replace strings in strings.</li>
		<li>Added function CreatePDFFromHtml() to render a pdf file based on html and add it as an attachment.</li>
		<li>Added function RecordAttachmentAdd() to add an attachment to a given record.</li>
		<li>Added function RecordAttachmentDeleteAll() to delete all attachments of a given record.</li>
		<li>Added function RecordAttachmentDeleteByFileName() to delete all attachments that match the given file name of a given record.</li>
		<li>Added function RenderTime() to render a date time value as an UTC ISO string.</li>
		<li>Added UI script function IsValidSysId() - however the function does not yet support currencies.</li>
		<li>GetTableFromSysId() is now using cross-scope techniques to identify records in the various tables - avoiding errors caused by cross-scope restrictions.</li>
		<li>DocumentationAPI::RenderListItem() now checks the text parameter properly and does not show "null" if the text is not provided.</li> 
		<li>InstallerAPI::SetProperty() now creates a property if it does not exist yet.</li>
		<li>SetProperty() now supports the bAdd parameter to control if a non-existing system property should be created. New system properties are created in the global scope.</li>
		<li>AppInstall() now sets the system property "sn_g_app_creator.allow_global" to true to allow users to create global scoped applications.</li>
		<li>AppInstall() now unhides the "Email" field class so that it can be used by developers.</li>
		<li>Added tables sys_ux_form_action, sys_ui_page and sys_public to the link directory.</li>
		<li>Added tables from the "Data Model for Order Management" plugin to the link directory.</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" now checks for system properties which do not have the scope name as a prefix.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks for empty description fields in roles.</li>
		<li>The manual template used by AppBuilder() is now also including documentation of contained roles.</li>  
		<li>The "debugrecord" macro is now producing code that works from other scopes, too.</li>
		<li>The "List" button now saves the current record before navigating to the list view.</li>
		<li>The "Find Sys ID" UI action now provides feedback if an invalid Sys ID was provided.</li>
		<li>When using AppBuilder() to built new apps, the bootstrapped manual ui page now also contains instructions to load the app from a source control repository.</li> 
		<li>The ATF test "DevTools - Implementation" now checks for any UI view that starts with "exp_dtemp" in the DevTools scope explicitly.</li>
		<li>Refactoring of code to avoid the [0] anti-pattern.</li>
	</ol>

	

	<h3>1.35.0 - 2022-03-15</h3>
	<ol>
		<li>Added security warnings to the manual and the documentation and source code of function RunScriptInScope() and RunScriptInGlobalScope().</li>
		<li>HtmlRenderLinkDirectory() now supports the title value in the link directory.</li>
		<li>GetParentRecord() now supports scan_check and its derived record classes.</li>
		<li>Added tables cmn_location item_option_new, item_option_new_set and sc_item_variables_task to the link directory.</li>
		<li>Added instance scan related tables to the link directory.</li>
		<li>Added script editor macro "debugrecord" to add code that renders a record summary into the debug log.</li>
		<li>More evaluator errors are filtered out in the "Evaluator Log" module which are caused by OOTB components.</li>
	</ol>
	
	
	<h3>1.34.0 - 2022-02-24</h3>
	<ol>
		<li>Added table sys_documentation to the link directory.</li>
		<li>RunScriptInScope(), IsValidTable(), IsValidColumn(), GetParentTable() and IsUserHasRoleExactly() now use the transaction cache to avoid repetitive database queries.</li>
		<li>IsUserHasRoleExactly() has been optimized to determine the user role in one query.</li>
		<li>PerformanceQuery() no longer defaults to the current user of no or an invalid user was specified. In such cases it will return false.</li>
	</ol>

	<h3>1.33.0 - 2022-02-17</h3>
	<ol>
		<li>Added function IsDomainSeparationInstalled() to determine if the domain separation plugin is installed.</li>
		<li>Function GetArrayValue() now works properly on GlideRecord fields (which are objects of type ScopedGlideElement).</li>
		<li>Added tables related to "Automated Testing Framework" to the link directory.</li>
		<li>Added domain separation related tables to the link directory.</li>
		<li>Added tables related to "Asset Lifecycle Management" to the link directory.</li>
		<li>The table ast_contract is now under "Contract Management" in the link directory.</li> 
		<li>The tables sys_app and sys_plugin have been removed and the table sys_package has been added under "Apps" in the link directory.</li>
		<li>Added tables related to "Customer Service Management" to the link directory.</li>
		<li>Added tables related to "Product Catalog Management" to the link directory.</li>
		<li>Added tables related to "Customer Service Install Base Management" to the link directory.</li>
		<li>Added tables related to "Order Management for Telecommunications" to the link directory.</li>
		<li>Added catalog_script_client table to the link directory.</li>
		<li>Business rule "sys_script_client - set table to global" now only acts on Client scripts (and not on derived tables like "Catalog Cliient Scripts")</li>
		<li>Function IsTableDomainSeparated() no longer requires the sys_domain_path column to be present in a table.</li>
		<li>Function GetAppName() now also removes a " HOTFIX" postfix.</li>
		<li>The "Start" page has been renamed to "Manual".</li> 
		<li>DocumentationAPI::RenderLicense() did not use the application name (was displaying "DevTools" instead). This has been fixed.</li>
	</ol>

	
	<h3>1.32.0 - 2022-01-28</h3>
	<ol>
		<li>Added tables sys_index, sys_ui_bookmark_group and sys_ui_bookmark to the link directory.</li>
		<li>GetTableFromSysId() now ignores tables starting with "sn_esign_".</li>
		<li>The global system property "glide.script.block.client.globals" is now created during installation if it does not exist yet.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks for an empty description field in system properties.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" no longer objects records in sys_index associated to the app.</li>
		<li>IsTableDomainSeparated() did not work properly if the domain separation system property does not exist. This has been fixed.</li>
		<li>The "Create Macro" UI action produced incorrect source code. Syntax editor macros for TimeAddDays(), IsTableDomainSeparated() and AppGetScope() were created incorrectly. This has been fixed.</li> 
		<li>Added chapter "Service Portal Deactivation" to the documentation.</li>
	</ol>
	
	<h3>1.31.0 - 2022-01-13</h3>
	<ol>
		<li>Paris is no longer actively supported.</li>
		<li>Introduced the Field Formatting Feature to display float values nicely in forms and lists.</li> 
		<li>Control whether a Service Portal is active by setting the 'Active' flag on records in sp_portal.</li> 
		<li>Added function TimeAddDays() to add a number of days to a given numeric time value.</li>
		<li>Added function SetValue() to set a value in a recursive object.</li>
		<li>Added function ArrayPushUnique() to add a value to an array if it doesn't exist yet.</li>
		<li>Added function GetAppScope() to get the scope name of an application based on its Sys Id.</li>
		<li>Added function IsTableDomainSeparated() to check if domain separation is active and supported on a given table.</li>
		<li>Merge() now also merges arrays including arrays within nested objects.</li>
		<li>Function GlideRecordInsert() now also supports the ghost mode in which it avoids the execution of business rules during insert.</li> 
		<li>Added UI Script function ObserveDOM() to attach an oberving callback function to a DOM element.</li>
		<li>Added UI Script function ServerRequest() to make an Ajax API call to a server-sided script include class.</li>
		<li>Added UI Script functions Log(), Debug(), GetType(), IsEqual(), IsObject(), IsArray(), ArrayPushUnique(), ArrayValueExists(), GetKeys(), GetArrayValue(), ParseJson(), Merge(), Clone(), GetValue() and SetValue() which are equivalent to their server-sided script include counterparts.</li> 
		<li>Added method InstallerAPI::ActivateUiPolicy() to set an existing UI Policy active or inactive during installation.</li>
		<li>RecordBulkProcessor() is now aware of lengthy record processing and multiple scheduled jobs running in parallel.</li>
		<li>DocumentationAPI::RenderRoles() now renders links to the role record pages.</li>
		<li>Added business rule "sys_script_client - set table to global" to allow global Client Scripts. OOTB the option of defining global Client Scripts is disabled. This business rule fixes this issue by setting an empty table field to "global".</li>
		<li>HtmlEncode() now also converts new line characters to line break html tags.</li>
		<li>Test "DevTools - CurrencyConversion" failed if the instance was set up after september 2021 as ECB exchange rates are not loaded historically. The test now uses the default rate supplied in an OOTB instance.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks if a sys_ui_script has a description.</li>
		<li>Added tables sp_portal, sys_script_client, sys_ui_script and fx_system_rate to the link directory.</li>
		<li>Link to table sys_app_application in the link directory did not work. This has been fixed.</li>
		<li>Hardened CurrencyConversion() against invalid parameters.</li>
		<li>The new form link UI action "Create Macro" on the script include form helps to create a syntax edit macro to access a function or class defined in that script include.</li>  
		<li>The global "Save" button is now ONE UI Action for both insert and update operations.</li>
		<li>AppBuilder() had a defect that cause the IsActive() function in the target application not to work correctly. This has been fixed.</li>
		<li>InstallerAPI.SetProperty() was defective and did not set properties correctly. This has been fixed.</li>
		<li>The AppInstall() script now also sets the system property "glide.script.block.client.globals" to false to enable global client-sided scripts and hence all client-side DevTools capabilities.</li>
		<li>Added system property "logging.verbosity" to control DevTools log output. Debug() is now using gs.debug() to produce debug output. AppInstall() sets "logging.verbosity" to "debug" which is the default setting.</li>
	</ol>

	
	<h3>1.30.0 - 2021-12-08</h3>
	<ol>
		<li>Added function StringPadStart() to compensate the missing Javascript function padStart.</li>
		<li>Added function RenderDate() to render the given date/time as an UTC iso string.</li>
		<li>Added function RenderDateTimeUser() to render the given date/time according to the current user's preferences.</li>
		<li>GetRecord() now checks if the given table actually has the sys_id column and returns false if not.</li>
		<li>GetTableFromSysId() ran into errors when trying to search fenced tables like sn_hr_* and sn_doc_*. These tables are now ignored.</li>
		<li>IsUserHasRoleExactly() did not work correctly of no user sys_id was specified (which should imply to assume the current user). This has been fixed.</li>
	</ol>
	
	<h3>1.29.0 - 2021-12-07</h3>
	<ol>
		<li>AppBuilder() now creates a manual page based on a template. A perfect start for app documentation.</li>
		<li>Added function DocumentationAPI::RenderInstanceScanChecks() to document instance scan checks contained in the app.</li>
		<li>IsValidVersion() now considers version numbers consisting of four components as valid.</li>
		<li>GlideRecordQuery() does not work on table sys_app_module. A fix is implemented. This has caused the AppBuilder() function to create duplicates of application menu modules.</li>
		<li>GlideRecordAddQuery() was defective when using an encoded query string. This has been fixed.</li>
		<li>HtmlRenderLinkDirectory() now supports query, order and order_direction parameters in the link directory.</li>
		<li>Tables sys_app_module and sys_app_application have been added to the link directory.</li>
		<li>GetParentRecord() now also supports sys_app_module and sys_choice.</li>
		<li>Added InstallerAPI::RecordInsertOrUpdate() to add and/or update records during installation in a generic and flexible way.</li>
		<li>AppBuilder() produced a defective AppInstall() function. When creating the InstallerAPI object, the DevTools scope was missing. This has been fixed.</li> 
		<li>Removed the "Event" section from the DevTools menu because all relevant links are now contained in the link directory.</li>
		<li>Removed the outdated security notice from the documentation.</li>
	</ol>
	
	<h3>1.28.1 - 2021-12-02</h3>
	<ol>
		<li>Improved the rendering of the link directory.</li>
		<li>Fixed a defect in AppBuilder() that prevented creating the "Log" module properly.</li>
	</ol>
	
	<h3>1.28.0 - 2021-12-01</h3>
	<ol>
		<li>Added function RecordQueryOrInsert() to retrieve a record based on a set of criteria and create the record if it doesn't exist using a set of given values.</li>
		<li>Added function RecordQuery() to retrieve exactly one record based on the given query object or string. Returns false if no record is found or the criteria identify multiple records.</li>
		<li>Added function GlideRecordSetValues() to set multiple values on a GlideRecord object at once.</li>
		<li>Added function CurrencyConversion() to convert a monetary amount from one currency to another.</li>
		<li>Added function GetFloatValue() to convert a given value into a floating point number.</li>
		<li>Added GetProperty() to receive the value of a system property using its defined type.</li>
		<li>Added GetDateNow() to return the current date (UTC) as an ISO-formatted string.</li>
		<li>Added the global "Save" button and the system property x_snc_devtools.ui.save_button to control its visibility.</li>
		<li>Function TestDataAPI::GetAllUsers() now also provides the groups of a user.</li>
		<li>Function TestDataAPI::GetAllGroups() now also provides the users of a group.</li>
		<li>Added function DocumentationAPI::RenderUIScripts() to auto-document UI scripts contained in an app and added the chapter in the DevTools documentation.</li>
		<li>Added function TestDataAPI::GetAllConfigurationItems().</li>
		<li>IsValidSysId() now also supports currency codes as they are used as sys_ids in fx_currency.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks if a sys_app_module title matched the sys_name and AppSanity() fixes that in case it is required.</li>
		<li>Tables sysevent_register, sysevent_email_action, sys_script_email, sys_properties_category, sys_properties_category_m2m, var_dictionary, sys_variable_value, sys_ui_style, sys_dictionary_override, fx_rate, sys_decision, sys_decision_input and sys_decision_question have been added to link directory.</li>
		<li>GetParentRecord() now also supports sys_ui_style, sys_dictionary_override, fx_rate, sys_decision_input and sys_decision_question.</li>
		<li>AppBuilder() now also adds a test suite and a module in the application menu.</li>
		<li>AppBuilder() adds test "Implementation" and "Installation" to the app's test suite.</li>
		<li>AppBuilder() creates application menu module "Log".</li>
		<li>Fixed a defect in RedirectToRecord() that should have prevented the function from working at all (which it didn't).</li>
		<li>RenderValue() no longer produces an error when a JavaObject is used as the parameter. However it cannot render it properly.</li>
		<li>Removed Debug*() and Log() functions from TransactionCacheAPI and TestDataAPI classes.</li>
	</ol>	
	
	<h3>1.27.1 - 2021-11-19</h3>
	<ol>
		<li>A defect prevented the "Find Sys ID" UI action to be visible. This has been fixed.</li>
	</ol>
	
	<h3>1.27.0 - 2021-11-18</h3>
	<ol>
		<li>Added function RedirectToRecord() to redirect the user agent to the given record.</li>
		<li>Added function ParseCsv() to convert a string containing csv formatted data into an array of objects representing the data rows.</li>
		<li>HttpRequest() now supports headers and sending a request body.</li>
		<li>Test step config "DevTools - App sanity" now checks if test steps' copied_from fields are empty.</li>
		<li>AppSanity() function now also accepts a scope name.</li>
		<li>AppSanity() now also clears all test steps' copied_from fields.</li>
		<li>GetParentRecord() now supports sys_ui_policy_rl_action, sys_ui_policy_action, sys_ui_policy, sys_ui_section, sys_ui_element, sys_ui_list and sys_ui_list_element.</li>
		<li>Added cmdb_rel_type, sys_ui_policy_rl_action, sys_ui_policy_action, sys_ui_policy, fx_currency, sys_glide_object, sys_ui_section, sys_ui_element, sys_ui_list and sys_ui_list_element to GetLinkDirectory().</li>
		<li>AppBuilder() creates the script include for the AppInstall() function.</li>
		<li>AppBuilder() creates the "active" system property.</li>
		<li>AppBuilder() creates the "log.active" system property und the Log() function respects if the property is set to true.</li>
		<li>AppBuilder() creates the script include for the IsActive() function.</li>
		<li>AppBuilder() creates the script include for the AppGetProperty() function.</li>
		<li>HtmlRenderLinkDirectory() now also renders links specified directly using a url.</li>
		<li>TestDataAPI::CreateRequestTask() now uses the third paramter as the opened_by user instead of the assigned_to user for consistency.</li>
		<li>Added function InstallerAPI::ShowFieldClass() to show or hide a field class during installation.</li>
		<li>GetTableFromSysId() has been improved significantly. Various tables are excluded and tables are searched in a way that makes it more probably that records are found faster.</li>
		<li>AppInstall() now unhides the "UI Action List" field class so that it can be used by developers.</li>
	</ol>
	
	
	<h3>1.26.0 - 2021-11-10</h3>
	<ol>
		<li>Added the new "Links" page with the new link directory with many useful links for admins and developers. The new function GetLinkDirectory() returns the standard DevTools link directory. The directory can be extended using the DevTools extension point.</li>
		<li>Removed the "Access Control" sub menu and the "Cross Scope Privileges" module.</li>
		<li>Added function RecordInsert() to add a new record into a table with a given set of values.</li>
		<li>Added function RecordGetSummary() to render a short hand summary of a record for debugging.</li>
		<li>Added function IsExistingRecord() to check if a given GlideRecord object represents an existing record.</li>
		<li>Added functions TestAPI::Get*() to get the Sys ID of the corresponding test data item.</li>
		<li>Added function TestAPI::TestCase_GetRecord() to check if a record exists.</li>
		<li>Added function TestAPI::TestCase_RecordGetValue() to check the value of a field in a given record.</li>
		<li>Added function TestAPI::TestCase_IsRecordAccessibleByUser() to check if a given user has access to a given record.</li>
		<li>Added function GetInstanceListPath() to generate the path component to access a list view.</li>
		<li>Added function HtmlRenderLink() to render the html for a link.</li>
		<li>Added function IsUserAdmin() to check if the current or a given user has the admin role.</li>
		<li>Added function GetShortUniqueString() to render unique strings and avoid naming collisions.</li>
		<li>Added function ParseURL() to return the components of a url in an object.</li>
		<li>Added function ParseUrlParameters() to return the key value pairs of a url parameter string in an object.</li>
		<li>Added method InstallerAPI::ActivateUiAction() to set an existing UI Action active or inactive during installation.</li>
		<li>Added support for core_comapany and ast_contract in TestDataAPI class.</li>
		<li>Added function GetRoleNamesFromUser() to get the names of the active roles of a user.</li>
		<li>Functions IsUserSecurityAdmin() and IsUserHasRoleExactly() now support a parameter to specify a user to check.</li>
		<li>The new UI Action "Find Sys ID" asks the user for a sys id and then redirects the browser to the record form page. That's a real killer feature!</li>
		<li>The new UI Action "Execute Now" replaces the OOTB "Execute Now" UI Action on sysauto_script. It triggers the execution, stays on the current form and displays a message that the job has been triggered for execution.</li> 
		<li>AppInstall() now deactivates the OOTB UI action "Execute Now" on sysauto_script.</li>

		<li>TestAPI::TestCase() now uses strict comparison ("===") when comparing the expected value with the result. Affected tests have been adapted accordingly.</li>
		<li>GetTableFromSysId() now checks if the sys_id field exists before trying to find the record - thus making the process faster and more robust.</li>
		<li>GetTableFromSysId() checks the sys_package, domain, core_company and ast_contract tables first to cover more of the more likely use cases without doing the full scan through all tables.</li>
		<li>IsTechnicalUser() now checks parameters against invalid and empty values and returns false if there are multiple technical users sharing the same user_name.</li>
		<li>GetParentRecord() now supports sys_storage_alias.</li>
		<li>AppBuilder() now also creates the script include for the AppSetDefaults() function.</li>
		<li>AppBuilder() now checks if an application menu already exists.</li>
		<li>AppBuilder() now creates the extention point instance for the DevTools extension point and the corresponding script includes.</li>
		<li>Updated example script for the DevTools extension point.</li>
		<li>The "List" button now keeps the filter of the list view from which the current record form was navigated.</li>
		<li>The "Delete Update Set" button is now active by default.</li>
		<li>Sleep() is now accessible to all application scopes.</li>
		<li>Renamed function DeleteUpdateSet() to UpdateSetDelete() and made it accessible to all scopes.</li>
		<li>The test step config "DevTools - Check scoped app sanity" now checks if active UI actions have a description (a non-empty comments field).</li>
	</ol>
	
	<h3>1.25.0 - 2021-10-11</h3>
	<ol>
		<li>RunScriptInGlobalScope() and the new RunScriptInScope() functions no longer require configuration changes on the sys_script_include table. If DevTools has been installed in the past you may use the following script to revert the modified configuration back to OOTB:<pre>var grRecord = new GlideRecord('sys_db_object');
grRecord.addQuery('name','=','sys_script_include');
grRecord.query();
if (grRecord.next())
{
   grRecord.access = '';
   grRecord.read_access = 'true';
   grRecord.create_access = 'false';
   grRecord.update_access = 'false';
   grRecord.delete_access = 'false';
   grRecord.update();
}
gs.invalidateCache();
</pre>
		</li>
		<li>Added function GetTableFromSysId() to identify the table of the record identified by the given sys_id.</li>
		<li>Added function ArrayAppend() to append an array to another and make sure return value is always an array.</li>
		<li>Added function DatabaseIndexCreate() to add a new database index.</li>
		<li>Added function GetParentTable() to return the name of the super class of a given table.</li> 
		<li>Added function IsValidColumn() to check if a given column exists in a table (or its parent tables).</li>
		<li>Added function IsValidFunction() to check if the given value is a callable function.</li>
		<li>Added function RecordGetValue() to get a single value from a given record.</li>
		<li>RecordSetValue(), GlideRecordUpdate() and RecordBulkProcessor() now support the ghost parameter which (if set to true) uses setWorkflow(false) and autoSysFields(false) to supress business rules, auditing and sys field updates.</li>
		<li>RecordBulkProcessor() now effectively detects if the same record is found again and again to prevent an endless loop. If a business rule prevents the update of a record and the ghost mode is not set, the function returns immediately.</li>
		<li>Added function TableSetAttribute() to set an attribute of a table to a given value.</li>
		<li>Added method InstallerAPI::SetTableAttribute().</li>
		<li>Added method InstallerAPI::ActivateBusinessRule().</li>
		<li>Added method InstallerAPI::ActivateClientScript().</li>
		<li>Added function DeleteUpdateSet() function and the "Delete Update Set" UI action. A system property controls if the button is available to admin users.</li>
		<li>The DevTools AppInstall() function now sets the update_synch attribute of the sysauto_script table to true to make sure that scheduled jobs are captured in update sets and committed to source control.</li>
		<li>AppInstall() now enables the creation of cross-scope before query business rules by deactivating a business rule and two client scripts.</li>
		<li>AppInstall() modifies the UI action "Execute Now" on sysauto to stay on the current form.</li>
		<li>The function TestAPI::TestCase() now displays the milliseconds required to run the given function.</li>
		<li>Test "DevTools - RunScriptInGlobalScope - Temporary script includes" was flaky due to race conditions during test executions. Added a threshold of 30 minutes so the test will only alert on left over script includes created more than 30 minutes ago.</li>
		<li>Test "DevTools - Installation" now checks if the sysauto_script table is configured so that records are captured in update sets and committed to source control.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks for unwanted entries in sys_index associated with the app.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks for test suite tests where the scope of the record does not match the scope of the associated test suite.</li>
		<li>Added the business rule "sys_atf_test_suite_test - match scopes" to make sure a test suite test is using the same scope as the associated suite.</li>
		<li>GetParentRecord() is now more effectively checking for the suite most relevant to a test by considering the scope of the test_suite, too.</li>
		<li>GetParentRecord() now supports records in tables sys_update_xml, sys_update_set, sys_extension_instance, sys_ux_list, sys_ux_list_category, ts_table, sys_documentation (field labels) and sys_dictionary (table columns).</li>
		<li>GetRecord() now checks if the given sys_id is valid, hence avoiding unnecessary queries.</li>
		<li>GetRecord() now tries to get a record from within the scope instead of using GlideRecordQuery() and hence RunScriptInGlobalScope() in all cases.</li>
		<li>GetRecord() now supports a third parameter: bNoCrossScope. If set to true, GetRecord() will not try to load a record from the global scope if it cannot be loaded from DevTools' scope.</li>
		<li>IsValidSysId() now confirms that "global" is a valid sys id.</li>
		<li>AppBuilder() now also accepts a scope name as the parameter.</li>
	</ol>
	
	<h3>1.24.0 - 2021-09-22</h3>
	<ol>
		<li>DevTools has been tested with Rome Release.</li>
		<li>RunScriptInGlobalScope() now supports seven input parameters.</li>
		<li>GetParentRecord() now also supports sys_aw_list and sys_aw_list_category.</li>
		<li>GetParentRecord() now checks if the GetParentRecord function in the called extension point really exists.</li>
		<li>Added function DocumentationAPI::RenderInstallationInstructionsRunTestSuite() to render instructions on how to enable ATF tests and run the app's test suite.</li>
		<li>Added function InstallerAPI::DeleteView() to delete views which (due to a platform defect) reappear after installation.</li>
		<li>Added a test to verify there are no temporary script includes left over by RunScriptInGlobalScope().</li>
	</ol>

	
	<h3>1.23.0 - 2021-09-16</h3>
	<ol>
		<li>Orlando is no longer actively supported.</li>
		<li>GetParentRecord() now supports sys_atf_test_suite, incident_task, change_task, problem_task, sc_task, sc_req_item, sys_db_view_table and sys_db_view_table_field records.</li>
		<li>GetParentRecord() now supports tests which are part of multiple test suites if there is exactly one suite in the same scope.</li>
		<li>Introduced the DevTools extension point - to extend the GetParentRecord() function.</li>
		<li>Added DocumentationAPI::RenderExtensionPoint() function.</li>
		<li>AppBuilder() now also adds the AppSetProperty function.</li>
		<li>Fixed a defect in test step configuration "DevTools - Check scoped app sanity".</li>
		<li>Fixed a defect in AppSanity() when removing the snc_internal role from an ACL.</li>
		<li>Removed view "DevTools Install" as it was no longer needed.</li>
	</ol>
	
	<h3>1.22.0 - 2021-09-09</h3>
	<ol>	
		<li>When using the "Run Test" button on a test step form, the UI action will first check if there are unsaved changes and save the test step record instead of running the test.</li> 
		<li>Introduced class TestAPI to support scripted tests by managing log output, result state and various generic test case functions.</li>
		<li>Introduced class InstallerAPI to support scripted installation steps (and refactored AppInstall() to use the new class).</li>
		<li>Added test step configuration "DevTools - Check test data sanity" to check if there is any test data left over with a given prefix.</li>
		<li>TestDataAPI now also supports sc_req_item and sc_task.</li>
		<li>Added function AppBuilder() to help building robust scoped apps.</li>
		<li>Added function AppBuilderAddTestToSuite() to add an ATF test to an existing ATF test suite.</li>
		<li>Added UI action "Add Test" to add a test to a suite in one click.</li>
		<li>Added UI action "Up" to navigate to a record's parent record if possible.</li>
		<li>The new function GetParentRecord() delivers a record's parent record if supported.</li>
		<li>Added function RenderSystemRequirements() to DocumentationAPI to automatically render system requirements including dependencies to other apps.</li>
		<li>Added function RenderInstallationInstructionsConfigureTableCrossScopeAccess() to DocumentationAPI.</li>
		<li>Added function RenderInstallationInstructionsBackgroundScript() to DocumentationAPI.</li>
		<li>Added function RenderUIActions() to DocumentationAPI.</li>
		<li>Added function RenderBusinessRules() to DocumentationAPI.</li>
		<li>Added function GetInstanceRecordPath(), GetInstanceRecordURL() and GetInstanceRecordURI() to produce different variants of a deep link to a specific record in the instance.</li>
		<li>AppSanity() now removes the snc_internal role from ACLs if there is at least one other role required for the ACL.</li>
		<li>AppGetName() now returns false instead of "undefined" if the app cannot be found.</li>
		<li>The test step config "DevTools - Check scoped app sanity" checks for unintended configuration of the role snc_internal in ACLs.</li>
		<li>Added business rule "sys_ui_action - set table to global" to allow global UI Actions. In a recent family release (Quebec?) the option of defining global UI Actions has been removed as the table field no longer allows to set the value to "global". This business rule fixes this issue by setting an empty table field to "global".</li> 
		<li>RenderValue() now supports the bUnsortedKeys parameter to avoid sorting object keys.</li>
		<li>Introduced the function GetAppDependencies() to retrieve information about an app's dependencies to other apps.</li>
	</ol>
	
	<h3>1.21.0 - 2021-08-23</h3>
	<ol>
		<li>Added function GetUserRecord() to get a user's GlideRecord object based on a sys_id, user_name or email.</li>
		<li>Added function PerformanceQuery() to measure query performance given a table, query string, a user, the number of repetitions and a limit of records to be returned. The function will provide the milliseconds of the fastest and slowest repetition, the average speed and the number of records returned.</li> 
		<li>Added function PerformanceQueryMultiple() to execute multiple performance tests on a number of queries combined with a number of users in one go.</li>
		<li>TestDataAPI.CreateUser() can now set the user's email.</li>
		<li>RecordBulkProcess() now handles empty tables properly and stops immediately.</li>
		<li>AppInstall() is now accessible from all scopes. This enables other installation scripts in other scoped Apps to run the function as part of their own installation procedure.</li>
		<li>Extended the installation guide to run a background script to configure cross scope access to the sys_script_include table.</li>
	</ol>
	
	<h3>1.20.0 - 2021-07-06</h3>
	<ol>
		<li>AppSanity() now sets is_private to false for system properties.</li>
		<li>AppSanity() now deletes useless ACLs for create and delete operations on fields.</li>
	</ol>
	
	<h3>1.19.1 - 2021-07-05</h3>
	<ol>
		<li>TestDataAPI.GetAllUsers() scanned for users where the "name" started with the prefix instead of the "user_name". This has been fixed.</li>
		<li>RenderValue() now also sorts the field "user_name" to the top.</li>
		<li>ATF tests "DevTools - GetGroupsFromUser", "DevTools - IsUserHasRoleExactly", "DevTools - TestDataAPI - ITSM" and "DevTools - IsUserSecurityAdmin" were checking for the user name ("name") instead of the user id ("user_name") leading to inconsistent results on customized instances. This has been fixed. </li>
	</ol>
	
	<h3>1.19.0 - 2021-06-30</h3>
	<ol>
		<li>Installation has been simplified. Only the sys_script_include table needs to be configured for cross scope access.</li> 
		<li>Massive refactoring to remove the dependency to the cross scope configuration to various tables.</li>
		<li>Added functions GlideRecordDeleteMultiple() and GlideRecordSetValue() to perform said activities from global scope.</li>
		<li>Added function DocumentationAPI.RenderInstallationInstructionsAppInstall() to guide an admin to run the AppInstall() function during installation.</li>
		<li>Extended DocumentationAPI.RenderInstallationInstructionsImportFromSourceControl() with a new step to create a personal access token.</li>
		<li>Install() has been renamed to AppInstall().</li>
		<li>IsValidTable() now checks for an empty table name before getting the record.</li>
		<li>ATF test "DevTools - GetRolesFromUser" has been refactored into a single script.</li>
	</ol>
			
	<h3>1.18.0 - 2021-06-24</h3>
	<ol>
		<li>Added function TestDataAPI.DeleteAllData() to delete all test data items.</li>
		<li>TestDataAPI.GetAllIncidents() now also lists the related task_sla records.</li>
		<li>TestDataAPI.CreateDatabaseView() now sets the order and left_join fields correctly.</li>
		<li>Added function IsArray() to check if a given value is an array or not.</li>
		<li>RenderValue() now displays nested empty arrays and empty objects as a separate row.</li>
		<li>RenderValue() now sorts keys of an object in a way that underscores are sorted to the end. This allows to implement a hierarchy using underscores as a prefix to a key name.</li> 
		<li>RecordSetValue() is now using GlideRecordUpdate() internally making it more resilient against cross scope restrictions.</li>
		<li>Added module "Script Execution History" to access previous executions of background scripts.</li>
		<li>Refactoring to limit the use of Object.keys() to the GetKeys() function.</li>
	</ol>
	
	<h3>1.17.0 - 2021-06-21</h3>
	<ol>
		<li>Added function GlideRecordDelete() to execute the deleteRecord member function of a GlideRecord in global scope.</li>
		<li>Added function SetProperty() to set any property regardless of its scope.</li>
		<li>Added function TestDataAPI.CreateDatabaseView() and associated functions to create database views as part of a test.</li>
		<li>TestDataAPI.CreateTestItem() did not delete the existing item before creating a new one, this has been fixed.</li>
		<li>Fixed the sort order in the "Query Log" module.</li>
		<li>The security notice regarding cross scope access configuration is now more prominent at the beginning of the documentation.</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" now checks for notification subscriptions that are associated to the scoped app.</li>
	</ol>
	
	<h3>1.16.0 - 2021-06-10</h3>
	<ol>
		<li>Changed the short description to "Code library and tools for ServiceNow developers".</li>
		<li>Added functions GlideRecordQuery(), GlideRecordInsert() and GlideRecordUpdate() to call GlideRecord's corresponding member functions in global scope.</li>
		<li>Added function IsValidDatabaseView() to check if the given string identifies a database view.</li>
		<li>Added function GetDatabaseViewsFromTable() to return all database views which use the given table.</li> 
		<li>Added function ArrayRemoveValue() to remove a value from an array.</li>
		<li>Added function GetInstanceURL() to return the intance root URL.</li>
		<li>Added function GetTablesByColumnType() to return all tables which have at least one column of the given type.</li>
		<li>Function UserAddRole() is now public.</li>
		<li>Function IsValidTable() is now public.</li>
		<li>TestDataAPI.GetAllUsers() now also provides the user's roles.</li>
		<li>RecordSetValue() can now set values in records across scopes.</li>
		<li>Added the missing script macro for RenderBytes.</li> 
	</ol>
	
	<h3>1.15.0 - 2021-05-05</h3>
	<ol>
		<li>WARNING: New York is no longer actively supported.</li>
		<li>Added function IsTechnicalUser() to check if a given user is a technical user (i.e. web_service_access_only is set to true).</li>
		<li>Added function IsProperty() to check if a given system property exists.</li>
		<li>Added function AppSetProperty() to set a DevTools system property to a value.</li> 
		<li>Added function UserImpersonate() which allows to impersonate a user from within a scoped application!</li>
		<li>Added function GetRecord() to serve as a shorthand to get a GlideRecord object for a record in a given table, identified by a sys_id.</li>
		<li>Added function GetRandomNumericToken() to create a pseudo-random numeric token string of a given length.</li>
		<li>Added function UserAddRole() to add a role to a user if the user doesn't have the role already.</li>
		<li>RunScriptInGlobalScope() did not work correctly if different scripts were provided within one transaction. It would always execute the first script during a transaction. This has been fixed. Please note that within a provided script, result values must now be set using "result =" instead of "return".</li>
		<li>RenderValue() now treats any object that has the sys_id key in the same way as a real GlideRecord object.</li>
		<li>GetGroupsFromUser() now checks for an empty user sys id. If an empty sys id was provided and for whatever reasons the sys_user_grmember has records with an empty sys_id, the associated groups would then be returned.</li>
		<li>Added view "DevTools" for scheduled jobs to show the "Run as" field.</li>
		<li>Renamed internal function SetDefaults() to AppSetDefaults().</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" now uses IsTechnicalUser() to check correct configuration of scheduled jobs.</li>
	</ol>
	
	<h3>1.14.0 - 2021-04-20</h3>
	<ol>
		<li>Added function RenderBytes() to return a user friendly number of bytes using KB, MB and GB where appropriate.</li>
		<li>Added function RecordDelete() to delete a single record based on a table name and the record sys id.</li>
		<li>RecordBulkProcessor() now detects if updating a record fails and aborts the processing. If the update fails, the maintenance date time field cannot be updated and the function would retry the same record until thresholds are reached.</li>
		<li>Added test "DevTools - Test data sanity" to check if all test data has been cleaned up in previous test runs.</li>
		<li>Added internal function SetDefaults() to set all DevTools system properties to their default values.</li> 
	</ol>

	
	<h3>1.13.0 - 2021-04-15</h3>
	<ol>
		<li>Added the StopWatch class which serves exactly as what its name suggests.</li>
		<li>Added function GetTimeNow() which is a shorthand for "new Date().getTime()".</li>
		<li>Added function GetTransactionRuntime() to return the amount of milliseconds passed since the start of the current transaction.</li>
		<li>GetGroupsFromUser() can now return the list of a user's groups with an encoded filter applied to the groups.</li>
		<li>Added function BusinessRuleGetOperation() to return the operation (of a business rule) based on the provided record.</li>
		<li>Debug() can now display the current transaction runtime in milliseconds. The new property x_snc_devtools.debug.log.transaction_runtime controls if the transaction runtime should be included or not.</li> 
		<li>RenderValue() has been improved: In case of a GlideRecord, the table name, sys_id and number (if available) are displayed on top and a selected choice of fields leads the list of values despite the alphabetical order.</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" now checks scheduled jobs for only technical users or the system admin serve as the run_as user.</li>
		<li>Added module "Query Log" to track invalid queries.</li>
		<li>The module "Outbox" is renamed to "Outbox or Sent" and displays sent mails.</li>
		<li>Improved column order in module "Storage Column Aliases".</li>
	</ol>	
	
	<h3>1.12.2 - 2021-03-22</h3>
	<ol>
		<li>Fixed a defect in IsVersionCompatible().</li>
	</ol>	
	
	<h3>1.12.1 - 2021-03-22</h3>
	<ol>
		<li>Fixed a defect in the test step configuration "DevTools - Check scoped app sanity".</li>
	</ol>
	
	<h3>1.12.0 - 2021-03-22</h3>
	<ol>
		<li>RecordBulkProcessor() will no longer process the same record twice in one go.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks for useless field level ACLs.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks for misconfigured test steps.</li>
		<li>Test step configuration "DevTools - Check table cross scope access" checks if "Caller access" is set to "Caller Restriction".</li>
		<li>Added a comprehensive syntax editor macro for "RecordBulkProcessor" with boilerplate code.</li>
	</ol>
	
	
	<h3>1.11.0 - 2021-03-19</h3>
	<ol>
		<li>Madrid is no longer supported.</li>
		<li>Added function RecordBulkProcessor() to process large amounts of records using a callback function.</li>
		<li>Added function Clone() to clone objects. This is to heal the JavaScript inherent design flaw around object references instead of copies.</li>
		<li>Added function Merge() to merge two objects.</li>
		<li>Added function RecordSetValue() to set a single field value on a given record.</li>  
		<li>Added function IsObject() to distinguish objects from other types.</li>
		<li>Added function IsValidTable() since the TableUtils script include is not accessible from a scoped app.</li> 
		<li>Added function RenderDateTime() since Javascript has no built-in function to render an ISO date/time string.</li>
		<li>Added function Sleep() to do nothing for a set amount of seconds.</li>
		<li>RenderValue() now has a second parameter "bHideEmpty". If set to true, empty values in objects are ignored - leading to better readable output.</li>
		<li>RenderValue() sorts keys of objects alphabetically. However, the keys "name", "short_description", "number" and "sys_id" will always lead the pack.</li>
		<li>RenderValue() now displays empty objects as "{}".</li>
		<li>IsEqual() can now compare objects.</li>
		<li>TestDataAPI: Added function GetAllData() and corresponding functions for each supported record type GetAllIncidents(), GetAllProblems(), etc.</li>
		<li>TestDataAPI: Added function CreateTestItem() and GetAllTestItems() to manage entries in the table x_snc_devtools_test which is used for testing.</li>
		<li>ParseDateTime() is now more resilient against incorrect input.</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" now checks for empty descriptions in publicly accessible script includes.</li> 
		<li>Improved installation instructions.</li>
	</ol>
	
	<h3>1.10.0 - 2021-02-26</h3>
	<ol>
		<li>Added function GetAppName() to return the name of a scoped application but without any name postfixes to indicate work in progress. This function is needed to create clean test step configuration descriptions.</li>
		<li>Added function AppSanity() which performs a number of changes to a scoped app's assets to maintain applicaton sanity. E.g. the function removes the copied_from attribute in atf tests.</li>
		<li>RenderValue() was improved: In case of objects, the keys are displayed in alphabetical order. In case of arrays, the elements are displayed in the given order as before.</li>
		<li>Added function DocumentationAPI::RenderListItem() and refactored all Render*() functions.</li>
		<li>The test step configuration "DevTools - Check scoped app sanity" now checks for jelly breakpoints in UI pages.</li> 
		<li>Added configuration options section to the documentation.</li>
		<li>Removed unnecessary debug logging in TestDataAPI.</li>
	</ol>
	
	
	<h3>1.9.0 - 2021-02-15</h3>
	<ol>
		<li>Quebec is now supported.</li>
		<li>Added function GetRolesFromUser() to get the sys_ids of all active roles of a user.</li>
		<li>Added function TestDataAPI::CreateRole() to create a role for testing purposes.</li>
		<li>TestDataAPI::CreateUser() now also accepts the name of a role without the prefix.</li>
		<li>Added function DocumentationAPI::RenderInstallationInstructionsImportFromSourceControl() to render installation instructions for importing an application from source control.</li>
		<li>Added function DocumentationAPI::RenderDisclaimer().</li>
		<li>Improved the rendering of script include documentation in DocumentationAPI::RenderScriptIncludes().</li> 
		<li>Added missing description to the DocumentationAPI script include.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks if the app's short_description is empty.</li>
		<li>Test step configuration "DevTools - Check scoped app sanity" now checks if a module's link_type is set to "HTML" (which doesn't work properly).</li>
	</ol>	
	
	<h3>1.8.0 - 2021-01-21</h3>
	<ol>
		<li>Added the DocumentationAPI class to render HTML fragments for a documentation UI page.</li>
	</ol>

	
	<h3>1.7.0 - 2021-01-20</h3>
	<ol>
		<li>Added function IsValidVersion() to check for a valid (ServiceNow app) version string.</li>
		<li>Added function IsVersionCompatible() to check a version against a requirement.</li>
		<li>Added test step configuration "DevTools - Check scoped app dependency". This test step configuration checks if another required scoped application is installed in a (backward) compatible version.</li>
		<li>Added module "Background Script" to open the background script page in a new window.</li>
		<li>Added new navigation section "Transaction" and moved all transaction related modules into it.</li> 
		<li>Added new navigation section "Cache" for easy access to the cache inspection tool and to flush the cache.</li> 
		<li>Added new navigation section "Events" to easily access the event log, event registry, notifications, and outbox.</li>
		<li>Added more test cases for GetIntegerValue().</li>
	</ol>
	
	<h3>1.6.0 - 2021-01-14</h3>
	<ol>
		<li>Added function IsTableCrossScopeAccessible() to check if applications from other scopes can perform read, create, update and delete operations on the given table.</li>
		<li>Added function RunScriptInGlobalScope() to run a script in the global scope from within a scoped application. Note that the function required full cross scope access to the sys_script_include table.</li>
		<li>IsEqual() now uses type strict comparison and will no longer return true in case of IsEqual(1,"1").</li>
		<li>The "Rerun Test" button has been renamed to "Run Test" and is now available on all forms that directly refer to an ATF test (including test steps).</li> 
		<li>The ATF tests "TestDataAPI" and "GetGroupsFromUser" now make use of the "DevTools - IsTableCrossScopeAccessible" test step configuration to check if the cross scope access to the tables is configured.</li>
		<li>The ATF test "Installation" now checks if the system property glide.record.legacy_cross_scope_access_policy_in_script is set to true to avoid cross scope access policy errors. Refer to&#160;<a target="_blank" href="https://support.servicenow.com/kb?id=kb_article_view&amp;sys_kb_id=db973947db18eb48feb1a851ca9619b4">KB0711970</a>.</li>
	</ol>
	
	<h3>1.5.0 - 2020-11-23</h3>
	<ol>
		<li>Added test step configuration "DevTools - Check scoped app sanity". This test step configuration takes a scoped application and checks if all its sys_properties are NOT set to private, and all ATF tests have an empty copied_from field. More checks will be added later.</li>
		<li>Added test step configuration "DevTools - Check table cross scope access"</li>
		<li>Added test step configurations to the documentation.</li>
		<li>Added test "DevTools - Installation" to check if all relevant tables are configured according to the installation guide.</li>
		<li>Added test "DevTools - App Sanity" to check if the app sanity is ok.</li>
		<li>Added table sys_user to the list of tables which need full cross scope access.</li>
	</ol>
	<h3>1.4.0 - 2020-11-16</h3>
	<ol>
		<li>Added function IsUserSecurityAdmin().</li>
	</ol>
	<h3>1.3.0 - 2020-11-04</h3>
	<ol>
		<li>Added class TransactionCacheAPI.</li>
		<li>Added function HtmlEncode().</li>
		<li>Added function GetKeys().</li>
		<li>Added function StringRemoveCharacters().</li>
		<li>Part of the documentation is generated automatically based on record descriptions.</li>
	</ol>
	<h3>1.2.4 - 2020-09-10</h3>
	<ol>
		<li>ParseDateTime() has been repaired, aligned to UTC and the corresponding test has been implemented.</li>
		<li>LoadMessages() now takes the language as the second parameter. Defaults to 'en'.</li>
		<li>GetBoolValue() was not accessible out of scope. This has been fixed.</li>
		<li>IsValidRecord() now also checks for type ScopedGlideRecord and ScopedGlideRecordSecure. The ATF test has been updated accordingly.</li>
		<li>TestDataAPI functions now display the sys_ids of created records in the log.</li>
		<li>Added the "Cancel Transactions" module.</li>
		<li>Added test and macro for IsUserHasRoleExactly().</li>
		<li>Added the system property x_snc_devtools.ui.list_button to control if the "List" button should be visible or not.</li>
		<li>Extended documentation with a reference to all script includes.</li>
	</ol>

	<h3>1.2.3 - 2020-08-21</h3>
	<ol>
		<li>Added the "Transaction Log" module.</li>
		<li>"Evaluator Log", "Debug Log" and "App Log" modules only show the last 30 minutes.</li>
		<li>Added the "Storage Column Aliases" module.</li>
		<li>RenderValue() can now work properly with nested objects.</li>
	</ol>
	<h3>1.2.2 - 2020-08-02</h3>
	<ol>
		<li>RenderValue() no longer causes the following error: com.glide.script.fencing.MethodNotAllowedException: Function getValue is not allowed in scope x_snc_devtools.</li>
	</ol>
	<h3>1.2.1 - 2020-07-30</h3>
	<ol>
		<li>GetArrayValue() now returns an empty array for an empty string.</li>
	</ol>
	<h3>1.2.0 - 2020-07-07</h3>
	<ol>
		<li>Added TestDataAPI.CreateRequest() and extended the ATF test "DevTools - TestDataAPI"</li>
		<li>Refactoring of several functions in TestDataAPI. Caller and Opener users can now be set explicitly.</li>
		<li>Added function IsValidRecord()</li>
	</ol>	
	<h3>1.1.0 - 2020-07-03</h3>
	<ol>
		<li>Added TestDataAPI.CreateProblem() and TestDataAPI.CreateProblemTask()</li>
		<li>The install script is now a scheduled script that can be run on demand instead of a fix script that runs automatically.</li>
	</ol>	
	<h3>1.0.0 - 2020-06-23</h3>
	<p>First baselined version</p>
<span style="visibility: hidden;">_CUT_HERE_</span>
</div>
</j:jelly>]]></html>
        <name>manual</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-02-27 11:17:42</sys_created_on>
        <sys_id>e44fd7541b578450a89720a8ec4bcb8c</sys_id>
        <sys_mod_count>1999</sys_mod_count>
        <sys_name>manual</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_ui_page_e44fd7541b578450a89720a8ec4bcb8c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-11 14:19:18</sys_updated_on>
    </sys_ui_page>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>e44fd7541b578450a89720a8ec4bcb8c</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-07 07:40:19</sys_created_on>
        <sys_id>a47490859374a610959b7fda2bba1073</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-07 07:40:19</sys_updated_on>
        <table>sys_ui_page</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
